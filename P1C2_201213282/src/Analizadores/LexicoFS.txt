package Analizadores;
import java_cup.runtime.*;
import java.io.Reader;
import Principal.NodoError;
import java.util.ArrayList;
%%
%class LexicoFS
%{
public static String errores="";
 public ArrayList<NodoError> Elista = new ArrayList();
    private Symbol Symbol(int type){
        return new Symbol(type ,yyline, yycolumn);
    }
    private Symbol Symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }

    private void errorLexico(String error,int x, int y ){
       errores+="error lexico \""+error+"\" en linea: "+Integer.toString(y)+" colulmna: "+Integer.toString(x)+"\n";
	   NodoError Nerror = new NodoError("lexico");
       Nerror.descripcion = "caracter no reconocido: "+error;
       Nerror.linea = String.valueOf(y);
       Nerror.columna = String.valueOf(x);
       Elista.add(Nerror);
    }
%}
%public
%cup
%ignorecase
%line
%column
%state Stado, LLave
Numero = [0-9]+
%%
"//"([^\n])*[\n]							{/*Ignorar Comentario Simple*/}
"/*"([^"*/"])*"*/"							{/*Ignorar Comentario multiple*/}
"+"											{return new Symbol(sym.mas,yyline,yycolumn,yytext());}
"-"											{return new Symbol(sym.men,yyline,yycolumn,yytext());}
"*"											{return new Symbol(sym.por,yyline,yycolumn,yytext());}
"/"											{return new Symbol(sym.div,yyline,yycolumn,yytext());}
"="											{return new Symbol(sym.igu,yyline,yycolumn,yytext());}
"^"											{return new Symbol(sym.pot,yyline,yycolumn,yytext());}
">"											{return new Symbol(sym.may,yyline,yycolumn,yytext());}
"<"											{return new Symbol(sym.men,yyline,yycolumn,yytext());}
"{"											{return new Symbol(sym.ill,yyline,yycolumn,yytext());}
"}"											{return new Symbol(sym.fll,yyline,yycolumn,yytext());}
"("											{return new Symbol(sym.ipa,yyline,yycolumn,yytext());}
")"											{return new Symbol(sym.fpa,yyline,yycolumn,yytext());}
"["											{return new Symbol(sym.ico,yyline,yycolumn,yytext());}
"]"											{return new Symbol(sym.fco,yyline,yycolumn,yytext());}
"?"											{return new Symbol(sym.fin,yyline,yycolumn,yytext());}
";"											{return new Symbol(sym.pyc,yyline,yycolumn,yytext());}
"!"											{return new Symbol(sym.not,yyline,yycolumn,yytext());}
"||"										{return new Symbol(sym.or,yyline,yycolumn,yytext());}
"&&"										{return new Symbol(sym.and,yyline,yycolumn,yytext());}
"var"										{return new Symbol(sym.var,yyline,yycolumn,yytext());}
"imprimir"									{return new Symbol(sym.impr,yyline,yycolumn,yytext());}
"importar"									{return new Symbol(sym.impo,yyline,yycolumn,yytext());}
"detener"									{return new Symbol(sym.dete,yyline,yycolumn,yytext());}
"retornar"									{return new Symbol(sym.reto,yyline,yycolumn,yytext());}
"Si"										{return new Symbol(sym.si,yyline,yycolumn,yytext());}
"selecciona"								{return new Symbol(sym.sele,yyline,yycolumn,yytext());}
"caso"										{return new Symbol(sym.caso,yyline,yycolumn,yytext());}
"defecto"									{return new Symbol(sym.defe,yyline,yycolumn,yytext());}
"funcion"									{return new Symbol(sym.func,yyline,yycolumn,yytext());}
"Descendente()"								{return new Symbol(sym.desc,yyline,yycolumn,yytext());}
"ascendente()"								{return new Symbol(sym.asce,yyline,yycolumn,yytext());}
"crearArrayDesdeArchivo"					{return new Symbol(sym.cada,yyline,yycolumn,yytext());}
"invertir()"								{return new Symbol(sym.inve,yyline,yycolumn,yytext());}
"maximo()"									{return new Symbol(sym.maxi,yyline,yycolumn,yytext());}
"minimo()"									{return new Symbol(sym.mini,yyline,yycolumn,yytext());}
"buscar"									{return new Symbol(sym.busc,yyline,yycolumn,yytext());}
"filtrar"									{return new Symbol(sym.filt,yyline,yycolumn,yytext());}
"map"										{return new Symbol(sym.map,yyline,yycolumn,yytext());}
"reduce"									{return new Symbol(sym.redu,yyline,yycolumn,yytext());}
"todos"										{return new Symbol(sym.todo,yyline,yycolumn,yytext());}
"alguno"									{return new Symbol(sym.algu,yyline,yycolumn,yytext());}
"LeerGxml"									{return new Symbol(sym.lgxm,yyline,yycolumn,yytext());}
"ObtenerPorEtiqueta"						{return new Symbol(sym.opet,yyline,yycolumn,yytext());}
"ObtenerPorId"								{return new Symbol(sym.opid,yyline,yycolumn,yytext());}
"ObtenerPorNombre"							{return new Symbol(sym.opno,yyline,yycolumn,yytext());}
"CrearVentana"								{return new Symbol(sym.cven,yyline,yycolumn,yytext());}
"CrearContenedor"							{return new Symbol(sym.ccon,yyline,yycolumn,yytext());}
"CrearTexto"								{return new Symbol(sym.ctex,yyline,yycolumn,yytext());}
"CrearCajaTexto"							{return new Symbol(sym.ccte,yyline,yycolumn,yytext());}
"CrearAreaTexto"							{return new Symbol(sym.cate,yyline,yycolumn,yytext());}
"CrearControlNumerico"						{return new Symbol(sym.ccnu,yyline,yycolumn,yytext());}
"CrearDesplegable"							{return new Symbol(sym.cdes,yyline,yycolumn,yytext());}
"CrearBoton"								{return new Symbol(sym.cbot,yyline,yycolumn,yytext());}
"CrearImagen"								{return new Symbol(sym.cima,yyline,yycolumn,yytext());}
"CrearReproductor"							{return new Symbol(sym.crep,yyline,yycolumn,yytext());}
"CrearVideo"								{return new Symbol(sym.cvid,yyline,yycolumn,yytext());}
"AlClic"									{return new Symbol(sym.acli,yyline,yycolumn,yytext());}
"AlCargar"									{return new Symbol(sym.acar,yyline,yycolumn,yytext());}
"AlCerrar"									{return new Symbol(sym.acer,yyline,yycolumn,yytext());}
({Numero})					    			{return new Symbol(sym.NUM,yyline,yycolumn,yytext());}	
([\r|\n|\r\n]|[ \t\f]|[ |\t|\r|\f|\n|" "])+ 	{/*Ignore*/}
.											{errorLexico(yytext(),yyline,yycolumn);}
