package Analizadores;
import java.io.FileReader;
import java_cup.runtime.Symbol;
import ComponentGxml.*;
import Principal.NodoError;
import java_cup.runtime.*;
import java.util.ArrayList;
parser code {:
    protected int error_sync_size () {
       return 1;   
    }

    public void syntax_error(Symbol s){
        System.out.println("Error sintactico lexema \"" + s.value+"\" en la Columna: "+(s.right+1) +", Linea: "+(s.left+1)+ " no esperado"+s.sym);
		NodoError Nerror = new NodoError("sintactico");
		Nerror.descripcion = "caracter no reconocido: "+ s.value;
		Nerror.linea = String.valueOf(s.left+1);
		Nerror.columna = String.valueOf(s.right+1);
		errores.add(Nerror);
    }

    private void error_sintaxis(){
	
	}
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico \"" + s.value+"\" en la Linea: "+(s.right+1) +", Columna: "+(s.left+1)+ "");
        /*Nodo_error nuevo = new Nodo_error();
        nuevo.dato = String.valueOf(s.value);
        nuevo.linea = (s.left+1);
        nuevo.columna=(s.right);
        Errores.add(nuevo);
        errores=true;*/
    }
    public NodoGxml regresar_raiz(){
        return RCCSS;
    }
 /*codig de usuario */
 String total = "";
 public NodoGxml RCCSS = new NodoGxml();
 private Boolean texto_ini = false;
 private Control control = new Control();
 private Boton botonaso = new Boton();
 private ListaDatos lista = new ListaDatos();
 public ArrayList<NodoError> errores = new ArrayList();
 //public ArrayList<Nodo> e = new ArrayList<Nodo>();
:}
action code {:
    public String estado="";
:}
terminal RMUL,RTEX,MORE,RVER,RFAL,MAY,RID,MEN,IGU,RX,DIA,RY,RTAM,RTIP,RALT,RDAT,RPAT,RBOT,RBOR,RANC,RCOL,RENV,RMIN,RMAX,RACI,RFUE,RNOM,RNEG,RCUR,RVEN,RDEF,RIMP,RCON,RLDA,REFE,RAFI,RCTR,RAIN,RAUT,CAD,NUM,TEXT;// Terminales
non terminal NodoGxml  Ini, ES_IMP,ES_VEN,Cuerpo_Vent,ES_CON,Tipo_Conte,ES_CTR,Cuerpo_CTR_1,Cuerpo_CTR,Tipos_CTR; //Nodos no terminales
non terminal NodoGxml  Cuerpo_CONTE,ES_MUL,ES_BOT,Cuerpo_BOT,ES_ENV,Cuerpo_Ini,Cuerpo_GEN;
non terminal String    SUM_TEXT,BOL;
non terminal NodoSGxml EST_VEN_COM,EST_VEN,EST_CON_COM,EST_CON,EST_TEX_COM,EST_TEX,EST_CTR_COM,EST_CTR,EST_MUL_COM,EST_MUL,EST_BOT_COM,EST_BOT;
non terminal ListaDatos Cuerpo_LDA,ES_LDA,EST_LDA_COM;
non terminal EDato		ES_DA,EST_DA_COM,ES_DEF; 
non terminal Texto		ES_TEX;
non terminal 			Start,ES_VEN1,ES_VEN2,ES_VEN3,ES_CON1,ES_CON2,ES_CON3;
start with Start;
Start ::= Ini:e1	{:RCCSS.Analizar_Nombres_Ventanas(errores);:};
Ini ::= 	Cuerpo_Ini Cuerpo_GEN
		|	Cuerpo_GEN;
Cuerpo_Ini ::= Cuerpo_Ini ES_IMP
			| ES_IMP
			;
Cuerpo_GEN ::= Cuerpo_GEN ES_VEN
			| ES_VEN
			;
			
BOL ::= RVER{:RESULT ="verdadero";:}
	|	RFAL{:RESULT ="falso";:};
	
/*---------------------------- Estructura Importar ----------------------------*/
ES_IMP ::= MAY RIMP MEN SUM_TEXT MAY  RIMP MEN	{::};

SUM_TEXT ::= SUM_TEXT:e1 TEXT:e2		{:if(texto_ini){texto_ini=false; RESULT=e1.toString()+e2.toString();}else{RESULT=e1.toString()+" "+e2.toString(); }:}
	|		 TEXT:e1 					{:RESULT=e1.toString(); texto_ini=true;:};
/*---------------------------- Estructura Ventana ----------------------------*/
ES_VEN ::= ES_VEN1 ES_VEN3 ; 
			//ESTRUCTURA de ventana 
			
		//ES_VEN1 = ESTRUCTURA INICIAL DE VENTANA
ES_VEN1 ::= MAY RVEN  EST_VEN_COM:e1 MEN  	{:Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); RCCSS.Ventanas.add(v);:}
			| error:e1 MEN 					{:Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ RCCSS.Ventanas.add(v); :};

		//Estructura Final de ventana 
ES_VEN2 ::= MAY DIA RVEN    MEN
			| error:e1		MEN ;
		
		//Estructura Central de Vetana Si viene su cuerpo o es un error, recupera con la estructura final de ventana 
ES_VEN3 ::= Cuerpo_Vent ES_VEN2
			| error ES_VEN2;
			
		// Cuerpo de los atributos de ventana 
EST_VEN_COM ::= EST_VEN_COM:e2 EST_VEN:e1		{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_VEN:e1 						{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:}
			;
			
				//atributos de ventana 
EST_VEN ::= 	RID  IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// ID  = "[^]" 
			|	RTIP IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Tipo  = "[^]"
			|	RCOL IGU CAD:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Color  = "[^]"
			|   RAIN IGU MORE:e1	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Inicial"; nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Accion Inicial  = {[^]}
			|   RAFI IGU MORE:e1	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Final"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Accion Final  = {[^]}
			;			
	
			//los tipos de datos que pueden venir dentro de venta 
Cuerpo_Vent ::= Cuerpo_Vent ES_CON
			|	ES_CON;
			
/*---------------------------- Estructura Contenedor ----------------------------*/
ES_CON ::= 	ES_CON1 ES_CON2{::};
		 //	<   contenedor estructura  >                 																												 <   /  contenedor  >  
//estructura inicial del contenedor 
ES_CON1::= MAY RCON EST_CON_COM:e1 MEN  {:Contenedor v = new Contenedor(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);:} 
		|  MAY RCON error MEN 					{:Contenedor v = new Contenedor(); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);:};

ES_CON2::= Cuerpo_CONTE ES_CON3
		|	error ES_CON3 ;

ES_CON3::= MAY  DIA RCON MEN	
		|  error MEN 			;
			
EST_CON_COM ::= EST_CON_COM:e2 EST_CON:e1		{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_CON:e1 						{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:};

EST_CON ::= 	RID  IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// ID  = "[^]"
			|	RX   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// X = Numero
			|   RY   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Y = Numero
			|	RALT IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Alto  = Numero
			|	RANC IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Ancho  = Numero
			|	RCOL IGU CAD:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Color  = "[^]"
			|   RBOR IGU BOL:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Borde"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Borde = "[^]"
			;			
Cuerpo_CONTE ::= Cuerpo_CONTE Tipo_Conte
				| Tipo_Conte;
				

	
Tipo_Conte ::=	ES_TEX:e1 	{:Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Textos.add(e1); :}//texto
			|	ES_CTR 		{:	:}//control
			|	ES_MUL 		{:	:}//multime
			|	ES_BOT 		{:	:}//boton
			|	ES_ENV 		{:	:}//enviar
			;
/*---------------------------- Estructura Texto ----------------------------*/
ES_TEX ::= 	MAY RTEX  EST_TEX_COM:e1 MEN SUM_TEXT:e2 MAY DIA RTEX   MEN{:Texto v = new Texto(); EDato nuevo= new EDato(e2,e2left+1,e2right+1); 	v.Analizar_Attributos(e1,errores,nuevo); RESULT=v;:}
			;//	<   Texto  estructura  >          <   /   Texto  >  			
		
EST_TEX_COM ::= EST_TEX_COM:e2 EST_TEX:e1			{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_TEX:e1 							{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:};
			
EST_TEX ::= 	RNOM IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Nombre = "[^]"
			|	RX   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// X = Numero
			|   RY   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Y = Numero
			|	RFUE IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Fuente  = "[^]"
			|	RTAM IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam";			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Tama√±io = Numero
			|	RCOL IGU CAD:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Color  = "[^]"
			|   RNEG IGU BOL:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Negrita = verdadero/falso
			|   RCUR IGU BOL:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Cursiva = verdadero/falso
			;			
/*---------------------------- Estructura Control ----------------------------*/
ES_CTR ::= 	MAY RCTR  EST_CTR_COM:e1 MEN {:Control v = new Control(); control=v; v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);:} Cuerpo_CTR_1 ;

Cuerpo_CTR_1 ::= Cuerpo_CTR MAY  DIA   RCTR   MEN{:control.Analizar_Lista_Datos(errores);:}
			| MAY  DIA   RCTR   MEN{:control.Analizar_Lista_Datos(errores);:};

		//	<   Control  estructura  >               <   /   Control  >  			
		
EST_CTR_COM ::= EST_CTR_COM:e2 EST_CTR:e1			{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_CTR:e1							{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:};
			
EST_CTR ::= 	RNOM IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Nombre = "[^]"
			|	RTIP IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Tipo  = "[^]"
			|	RX   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X";	 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// X = Numero
			|   RY   IGU NUM:e1    	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Y = Numero
			|	RALT IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Alto  = Numero
			|	RANC IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Ancho  = Numero
			|	RFUE IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Fuente  = "[^]"
			|	RTAM IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Tama√±io = Numero
			|	RCOL IGU CAD:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Color  = "[^]"
			|   RNEG IGU BOL:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Negrita = verdadero/falso
			|   RCUR IGU BOL:e1		{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Cursiva = verdadero/falso
			|	RMAX IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="maximo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Maximo = Numero
			|	RMIN IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="minimo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Minimo = Numero
			|   RACI IGU MORE:e1	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Accion = {[^]}	
			;						
			
			
Cuerpo_CTR ::= Cuerpo_CTR Tipos_CTR
			|	Tipos_CTR;
			
Tipos_CTR ::=	ES_LDA:e1 {:control.Datos=e1;:}
			|	ES_DEF:e1 {:control.Defecto=e1;:}
			;
/*---------------------------- Etiqueta Lista Datos----------------------------*/
ES_LDA ::= 	MAY RLDA  EST_LDA_COM:e1 {:RESULT=e1;:};
		//	<   Lista Datos  estructura   
EST_LDA_COM ::= RACI IGU MORE:e2 MEN  Cuerpo_LDA:e1  MAY  DIA RLDA        MEN   {:e1.accion=e2.toString(); RESULT=e1;:}
			//  Accion = {[^]} >                <   /   Lista Datos  >   
			|	MEN  Cuerpo_LDA:e1  MAY DIA  RLDA        MEN   					{:RESULT=e1;:}
			;	
			//  >                <   /   Lista Datos  >  
Cuerpo_LDA ::= 	Cuerpo_LDA:e2  ES_DA:e1		{:e2.Datos.add(e1); RESULT=e2;:} 
			|	ES_DA:e1					{:ListaDatos nuevo = new ListaDatos(); nuevo.Datos.add(e1); RESULT=nuevo;:}
			;

/*---------------------------- Etiqueta Dato----------------------------*/	
ES_DA ::= 	MAY RDAT  EST_DA_COM:e1 {:RESULT=e1;:};
		//	<   Dato  estructura   
EST_DA_COM ::= REFE IGU CAD:e2       MEN SUM_TEXT:e1 {::}  MAY  DIA RDAT   MEN		{:EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e2left+1; nuevo.columna=e2right+1; nuevo.referencia=e2.toString(); RESULT=nuevo;:}
			// REFERENCIA = "[^]" >             <   /      Dato  >
			|MEN SUM_TEXT:e1 MAY  DIA RDAT   MEN									{:EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}
				;
			
/*---------------------------- Etiqueta Defecto----------------------------*/	
ES_DEF ::= 	MAY RDEF   MEN  SUM_TEXT:e1 MAY DIA RDEF   MEN			{:EDato nuevo= new EDato(); nuevo.Dato=e1.trim(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:};
		//	<   Defecto >         <   /   Defecto  > 		
		
/*---------------------------- Estructura Multimedia ----------------------------*/		
ES_MUL ::= 	MAY RMUL  EST_MUL_COM:e1  MEN  /*SUM_TEXT:e2*/ MAY DIA RMUL   MEN{:Multimedia v = new Multimedia(); v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);:};
		//	<   Multime Estructura  >         <   /  Multime  > 
		
EST_MUL_COM ::= EST_MUL_COM:e2 EST_MUL:e1		{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_MUL:e1 						{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:}
			;			
			
EST_MUL 	::= RNOM IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Nombre = "[^]"
			|	RTIP IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Tipo  = "[^]"
			|	RPAT IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Path"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Path  = "[^]"
			|	RX   IGU NUM:e1     {: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// X = Numero
			|   RY   IGU NUM:e1     {: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Y = Numero
			|	RALT IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Alto  = Numero
			|	RANC IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Ancho  = Numero
			|	RAUT IGU BOL:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="auto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Auto-reproduccion  = verdadero/falso
			;			
/*---------------------------- Estructura Boton ----------------------------*/	
ES_BOT ::= 	MAY RBOT  EST_BOT_COM:e1  MEN {:Boton v = new Boton("boton"); v.Analizar_Attributos(e1,errores); botonaso=v;:}Cuerpo_BOT MAY DIA RBOT   MEN{:Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);:}
;
		//	<   BOTON Estructura    >              <   /  Boton  > 

EST_BOT_COM ::= EST_BOT_COM:e2 EST_BOT:e1		{:e2.listas.add(e1); RESULT=e2;:}
			|	EST_BOT:e1						{:NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;:} ;
			
EST_BOT 	::= RNOM IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Nombre = "[^]"
			|	RX   IGU NUM:e1     {: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// X = Numero
			|   RY   IGU NUM:e1     {: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Y = Numero
			|	RALT IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Alto  = Numero
			|	RANC IGU NUM:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Ancho  = Numero
			|	REFE IGU CAD:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="referencia"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Referencia  = "[^]"
			|	RACI IGU MORE:e1 	{: NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;:}// Accion  = {"[^]"}
				;

Cuerpo_BOT ::= ES_TEX:e1	{:botonaso.Etexto=e1;:}//estructura texto
			|  SUM_TEXT:e1	{:botonaso.texto=e1.replace("\"", "");:}//texto
			;	 
/*---------------------------- Estructura Enviar ----------------------------*/	
ES_ENV ::= 	MAY RENV  EST_BOT_COM:e1 {:Boton v = new Boton("enviar"); v.Analizar_Attributos(e1,errores); botonaso=v;:} MEN Cuerpo_BOT MAY  DIA RENV  MEN{:Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);:};
		