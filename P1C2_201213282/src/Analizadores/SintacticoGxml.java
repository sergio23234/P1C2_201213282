
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20140808 (SVN rev 54)
//----------------------------------------------------

package Analizadores;

import java.io.FileReader;
import java_cup.runtime.Symbol;
import ComponentGxml.*;
import Principal.NodoError;
import java_cup.runtime.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20140808 (SVN rev 54) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class SintacticoGxml extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  public SintacticoGxml() {super();}

  /** Constructor which sets the default scanner. */
  public SintacticoGxml(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintacticoGxml(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\312\000\002\002\004\000\002\054\003\000\002\002" +
    "\004\000\002\002\003\000\002\022\004\000\002\022\003" +
    "\000\002\023\004\000\002\023\003\000\002\023\004\000" +
    "\002\025\003\000\002\025\003\000\002\003\004\000\002" +
    "\055\005\000\002\055\006\000\002\057\004\000\002\057" +
    "\004\000\002\056\006\000\002\056\007\000\002\056\007" +
    "\000\002\056\007\000\002\056\005\000\002\024\004\000" +
    "\002\024\003\000\002\004\004\000\002\061\006\000\002" +
    "\061\004\000\002\062\006\000\002\062\007\000\002\062" +
    "\007\000\002\062\007\000\002\062\005\000\002\063\004" +
    "\000\002\063\004\000\002\026\004\000\002\026\003\000" +
    "\002\027\005\000\002\027\005\000\002\027\005\000\002" +
    "\027\005\000\002\027\005\000\002\005\004\000\002\005" +
    "\003\000\002\006\004\000\002\064\006\000\002\064\006" +
    "\000\002\065\004\000\002\065\004\000\002\066\006\000" +
    "\002\066\007\000\002\066\007\000\002\066\007\000\002" +
    "\066\006\000\002\030\004\000\002\030\003\000\002\031" +
    "\005\000\002\031\005\000\002\031\005\000\002\031\005" +
    "\000\002\031\005\000\002\031\005\000\002\031\005\000" +
    "\002\014\004\000\002\014\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\003\000\002\007\003\000\002\007" +
    "\003\000\002\052\004\000\002\053\006\000\002\053\006" +
    "\000\002\051\004\000\002\051\004\000\002\100\006\000" +
    "\002\100\006\000\002\100\005\000\002\100\007\000\002" +
    "\100\007\000\002\032\004\000\002\032\003\000\002\033" +
    "\005\000\002\033\005\000\002\033\005\000\002\033\005" +
    "\000\002\033\005\000\002\033\005\000\002\033\005\000" +
    "\002\033\005\000\002\010\004\000\002\067\006\000\002" +
    "\067\006\000\002\011\004\000\002\011\003\000\002\070" +
    "\006\000\002\070\007\000\002\070\007\000\002\070\007" +
    "\000\002\070\005\000\002\034\004\000\002\034\003\000" +
    "\002\035\005\000\002\035\005\000\002\035\005\000\002" +
    "\035\005\000\002\035\005\000\002\035\005\000\002\035" +
    "\005\000\002\035\005\000\002\035\005\000\002\035\005" +
    "\000\002\035\005\000\002\035\005\000\002\035\005\000" +
    "\002\035\005\000\002\012\004\000\002\012\003\000\002" +
    "\013\003\000\002\013\003\000\002\043\005\000\002\044" +
    "\010\000\002\044\005\000\002\044\005\000\002\044\006" +
    "\000\002\060\006\000\002\060\007\000\002\060\007\000" +
    "\002\060\006\000\002\060\005\000\002\042\004\000\002" +
    "\042\003\000\002\045\005\000\002\046\010\000\002\046" +
    "\005\000\002\046\004\000\002\101\006\000\002\101\007" +
    "\000\002\101\007\000\002\101\006\000\002\101\005\000" +
    "\002\047\004\000\002\076\005\000\002\076\005\000\002" +
    "\076\006\000\002\076\006\000\002\050\004\000\002\050" +
    "\004\000\002\077\006\000\002\077\005\000\002\077\007" +
    "\000\002\077\007\000\002\077\007\000\002\015\004\000" +
    "\002\071\006\000\002\071\006\000\002\071\006\000\002" +
    "\072\007\000\002\072\007\000\002\072\007\000\002\072" +
    "\007\000\002\072\006\000\002\072\006\000\002\036\004" +
    "\000\002\036\003\000\002\037\005\000\002\037\005\000" +
    "\002\037\005\000\002\037\005\000\002\037\005\000\002" +
    "\037\005\000\002\037\005\000\002\037\005\000\002\016" +
    "\004\000\002\073\006\000\002\073\006\000\002\073\005" +
    "\000\002\017\004\000\002\017\004\000\002\017\004\000" +
    "\002\074\006\000\002\074\007\000\002\074\007\000\002" +
    "\074\007\000\002\074\006\000\002\040\004\000\002\040" +
    "\003\000\002\041\005\000\002\041\005\000\002\041\005" +
    "\000\002\041\005\000\002\041\005\000\002\041\005\000" +
    "\002\041\005\000\002\102\002\000\002\021\010\000\002" +
    "\020\004\000\002\020\004\000\002\020\004\000\002\075" +
    "\006\000\002\075\007\000\002\075\007\000\002\075\007" +
    "\000\002\075\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01e4\000\006\003\011\011\005\001\002\000\004\002" +
    "\000\001\002\000\006\041\023\043\u01e3\001\002\000\006" +
    "\003\u01d2\055\126\001\002\000\010\002\ufffa\003\ufffa\011" +
    "\ufffa\001\002\000\006\003\ufffc\011\ufffc\001\002\000\010" +
    "\003\021\011\022\013\047\001\002\000\006\003\052\011" +
    "\054\001\002\000\004\002\050\001\002\000\010\002\ufffe" +
    "\003\021\011\022\001\002\000\006\003\011\011\005\001" +
    "\002\000\006\003\ufffd\011\ufffd\001\002\000\010\002\uffff" +
    "\003\021\011\022\001\002\000\010\002\ufffb\003\ufffb\011" +
    "\ufffb\001\002\000\004\013\047\001\002\000\004\041\023" +
    "\001\002\000\014\012\030\021\024\030\032\047\025\051" +
    "\027\001\002\000\004\014\045\001\002\000\004\014\043" +
    "\001\002\000\016\012\030\013\042\021\024\030\032\047" +
    "\025\051\027\001\002\000\004\014\037\001\002\000\004" +
    "\014\035\001\002\000\016\012\uffdf\013\uffdf\021\uffdf\030" +
    "\uffdf\047\uffdf\051\uffdf\001\002\000\004\014\033\001\002" +
    "\000\004\053\034\001\002\000\016\012\uffdc\013\uffdc\021" +
    "\uffdc\030\uffdc\047\uffdc\051\uffdc\001\002\000\004\053\036" +
    "\001\002\000\016\012\uffde\013\uffde\021\uffde\030\uffde\047" +
    "\uffde\051\uffde\001\002\000\004\006\040\001\002\000\016" +
    "\012\uffdb\013\uffdb\021\uffdb\030\uffdb\047\uffdb\051\uffdb\001" +
    "\002\000\016\012\uffe0\013\uffe0\021\uffe0\030\uffe0\047\uffe0" +
    "\051\uffe0\001\002\000\006\003\uffe9\011\uffe9\001\002\000" +
    "\004\006\044\001\002\000\016\012\uffda\013\uffda\021\uffda" +
    "\030\uffda\047\uffda\051\uffda\001\002\000\004\053\046\001" +
    "\002\000\016\012\uffdd\013\uffdd\021\uffdd\030\uffdd\047\uffdd" +
    "\051\uffdd\001\002\000\006\003\uffe8\011\uffe8\001\002\000" +
    "\004\002\001\001\002\000\010\002\uffea\003\uffea\011\uffea" +
    "\001\002\000\004\011\u01ce\001\002\000\004\011\u01be\001" +
    "\002\000\004\044\u01a1\001\002\000\006\003\065\011\062" +
    "\001\002\000\004\011\uffd8\001\002\000\004\011\uffbe\001" +
    "\002\000\010\003\u018e\011\130\055\126\001\002\000\004" +
    "\011\uffbf\001\002\000\016\003\u018b\004\101\005\104\025" +
    "\103\031\106\050\100\001\002\000\006\003\u0177\011\u0179" +
    "\001\002\000\004\011\uffc2\001\002\000\004\011\u0175\001" +
    "\002\000\004\011\u010e\001\002\000\004\011\uffc3\001\002" +
    "\000\004\011\uffc1\001\002\000\004\011\uffc0\001\002\000" +
    "\006\003\372\055\126\001\002\000\004\011\075\001\002" +
    "\000\004\011\uffd7\001\002\000\020\003\102\004\101\005" +
    "\104\016\105\025\103\031\106\050\100\001\002\000\004" +
    "\011\uffc4\001\002\000\004\011\uffd4\001\002\000\040\003" +
    "\325\015\322\017\321\020\330\021\331\022\323\027\324" +
    "\030\315\032\320\033\327\034\314\035\313\036\326\037" +
    "\316\040\311\001\002\000\024\003\261\015\257\017\254" +
    "\021\265\022\260\024\263\027\262\036\264\052\253\001" +
    "\002\000\006\004\246\016\247\001\002\000\024\003\242" +
    "\013\241\015\112\017\111\022\113\027\114\034\110\036" +
    "\115\046\107\001\002\000\024\003\211\015\210\017\207" +
    "\020\213\030\205\035\204\036\212\037\206\040\201\001" +
    "\002\000\006\003\171\044\172\001\002\000\020\015\112" +
    "\017\111\022\113\027\114\034\110\036\115\046\107\001" +
    "\002\000\004\014\167\001\002\000\004\014\165\001\002" +
    "\000\004\014\163\001\002\000\004\014\161\001\002\000" +
    "\004\014\157\001\002\000\004\014\155\001\002\000\004" +
    "\014\153\001\002\000\022\013\uff49\015\uff49\017\uff49\022" +
    "\uff49\027\uff49\034\uff49\036\uff49\046\uff49\001\002\000\022" +
    "\013\uff41\015\112\017\111\022\113\027\114\034\110\036" +
    "\115\046\107\001\002\000\004\013\122\001\002\000\022" +
    "\013\uff4a\015\uff4a\017\uff4a\022\uff4a\027\uff4a\034\uff4a\036" +
    "\uff4a\046\uff4a\001\002\000\010\003\125\011\130\055\126" +
    "\001\002\000\004\011\131\001\002\000\006\011\131\055" +
    "\150\001\002\000\004\011\131\001\002\000\006\011\uffeb" +
    "\055\uffeb\001\002\000\004\011\uff40\001\002\000\004\005" +
    "\104\001\002\000\006\003\133\016\134\001\002\000\004" +
    "\011\uff3d\001\002\000\004\016\145\001\002\000\006\003" +
    "\135\031\136\001\002\000\006\013\142\031\143\001\002" +
    "\000\006\003\137\013\140\001\002\000\004\013\141\001" +
    "\002\000\004\011\uff3c\001\002\000\004\011\uff3a\001\002" +
    "\000\004\011\uff38\001\002\000\004\013\144\001\002\000" +
    "\004\011\uff39\001\002\000\004\031\146\001\002\000\004" +
    "\013\147\001\002\000\004\011\uff3b\001\002\000\006\011" +
    "\uffec\055\uffec\001\002\000\004\011\uff3e\001\002\000\004" +
    "\011\uff3f\001\002\000\004\053\154\001\002\000\022\013" +
    "\uff48\015\uff48\017\uff48\022\uff48\027\uff48\034\uff48\036\uff48" +
    "\046\uff48\001\002\000\004\054\156\001\002\000\022\013" +
    "\uff44\015\uff44\017\uff44\022\uff44\027\uff44\034\uff44\036\uff44" +
    "\046\uff44\001\002\000\004\054\160\001\002\000\022\013" +
    "\uff45\015\uff45\017\uff45\022\uff45\027\uff45\034\uff45\036\uff45" +
    "\046\uff45\001\002\000\004\054\162\001\002\000\022\013" +
    "\uff47\015\uff47\017\uff47\022\uff47\027\uff47\034\uff47\036\uff47" +
    "\046\uff47\001\002\000\004\054\164\001\002\000\022\013" +
    "\uff46\015\uff46\017\uff46\022\uff46\027\uff46\034\uff46\036\uff46" +
    "\046\uff46\001\002\000\004\006\166\001\002\000\022\013" +
    "\uff42\015\uff42\017\uff42\022\uff42\027\uff42\034\uff42\036\uff42" +
    "\046\uff42\001\002\000\004\053\170\001\002\000\022\013" +
    "\uff43\015\uff43\017\uff43\022\uff43\027\uff43\034\uff43\036\uff43" +
    "\046\uff43\001\002\000\006\013\176\044\177\001\002\000" +
    "\006\003\173\013\174\001\002\000\004\013\175\001\002" +
    "\000\004\011\uffd2\001\002\000\004\011\uffd1\001\002\000" +
    "\004\011\uffce\001\002\000\004\013\200\001\002\000\004" +
    "\011\uffcf\001\002\000\004\014\237\001\002\000\024\013" +
    "\uffb2\015\uffb2\017\uffb2\020\uffb2\030\uffb2\035\uffb2\036\uffb2" +
    "\037\uffb2\040\uffb2\001\002\000\024\013\236\015\210\017" +
    "\207\020\213\030\205\035\204\036\212\037\206\040\201" +
    "\001\002\000\004\014\233\001\002\000\004\014\231\001" +
    "\002\000\004\014\225\001\002\000\004\014\223\001\002" +
    "\000\004\014\221\001\002\000\004\013\220\001\002\000" +
    "\004\014\216\001\002\000\004\014\214\001\002\000\004" +
    "\054\215\001\002\000\024\013\uffad\015\uffad\017\uffad\020" +
    "\uffad\030\uffad\035\uffad\036\uffad\037\uffad\040\uffad\001\002" +
    "\000\004\053\217\001\002\000\024\013\uffb1\015\uffb1\017" +
    "\uffb1\020\uffb1\030\uffb1\035\uffb1\036\uffb1\037\uffb1\040\uffb1" +
    "\001\002\000\006\003\uffbb\055\uffbb\001\002\000\004\054" +
    "\222\001\002\000\024\013\uffb0\015\uffb0\017\uffb0\020\uffb0" +
    "\030\uffb0\035\uffb0\036\uffb0\037\uffb0\040\uffb0\001\002\000" +
    "\004\054\224\001\002\000\024\013\uffaf\015\uffaf\017\uffaf" +
    "\020\uffaf\030\uffaf\035\uffaf\036\uffaf\037\uffaf\040\uffaf\001" +
    "\002\000\006\007\227\010\226\001\002\000\050\012\ufff7" +
    "\013\ufff7\015\ufff7\017\ufff7\020\ufff7\021\ufff7\022\ufff7\024" +
    "\ufff7\026\ufff7\027\ufff7\030\ufff7\032\ufff7\033\ufff7\034\ufff7" +
    "\035\ufff7\036\ufff7\037\ufff7\040\ufff7\052\ufff7\001\002\000" +
    "\050\012\ufff8\013\ufff8\015\ufff8\017\ufff8\020\ufff8\021\ufff8" +
    "\022\ufff8\024\ufff8\026\ufff8\027\ufff8\030\ufff8\032\ufff8\033" +
    "\ufff8\034\ufff8\035\ufff8\036\ufff8\037\ufff8\040\ufff8\052\ufff8" +
    "\001\002\000\024\013\uffab\015\uffab\017\uffab\020\uffab\030" +
    "\uffab\035\uffab\036\uffab\037\uffab\040\uffab\001\002\000\004" +
    "\053\232\001\002\000\024\013\uffac\015\uffac\017\uffac\020" +
    "\uffac\030\uffac\035\uffac\036\uffac\037\uffac\040\uffac\001\002" +
    "\000\004\053\234\001\002\000\024\013\uffae\015\uffae\017" +
    "\uffae\020\uffae\030\uffae\035\uffae\036\uffae\037\uffae\040\uffae" +
    "\001\002\000\024\013\uffb3\015\uffb3\017\uffb3\020\uffb3\030" +
    "\uffb3\035\uffb3\036\uffb3\037\uffb3\040\uffb3\001\002\000\006" +
    "\003\uffbc\055\uffbc\001\002\000\006\007\227\010\226\001" +
    "\002\000\024\013\uffaa\015\uffaa\017\uffaa\020\uffaa\030\uffaa" +
    "\035\uffaa\036\uffaa\037\uffaa\040\uffaa\001\002\000\010\003" +
    "\uff53\011\uff53\055\uff53\001\002\000\004\013\245\001\002" +
    "\000\022\013\244\015\112\017\111\022\113\027\114\034" +
    "\110\036\115\046\107\001\002\000\010\003\uff55\011\uff55" +
    "\055\uff55\001\002\000\010\003\uff54\011\uff54\055\uff54\001" +
    "\002\000\004\013\252\001\002\000\004\044\250\001\002" +
    "\000\004\013\251\001\002\000\004\011\uffd0\001\002\000" +
    "\006\003\uff67\011\uff67\001\002\000\004\014\307\001\002" +
    "\000\004\014\305\001\002\000\024\013\uff5f\015\uff5f\017" +
    "\uff5f\021\uff5f\022\uff5f\024\uff5f\027\uff5f\036\uff5f\052\uff5f" +
    "\001\002\000\024\013\303\015\257\017\254\021\265\022" +
    "\260\024\263\027\262\036\264\052\253\001\002\000\004" +
    "\014\301\001\002\000\004\014\277\001\002\000\004\013" +
    "\276\001\002\000\004\014\274\001\002\000\004\014\272" +
    "\001\002\000\004\014\270\001\002\000\004\014\266\001" +
    "\002\000\004\053\267\001\002\000\024\013\uff5d\015\uff5d" +
    "\017\uff5d\021\uff5d\022\uff5d\024\uff5d\027\uff5d\036\uff5d\052" +
    "\uff5d\001\002\000\004\053\271\001\002\000\024\013\uff5e" +
    "\015\uff5e\017\uff5e\021\uff5e\022\uff5e\024\uff5e\027\uff5e\036" +
    "\uff5e\052\uff5e\001\002\000\004\053\273\001\002\000\024" +
    "\013\uff5c\015\uff5c\017\uff5c\021\uff5c\022\uff5c\024\uff5c\027" +
    "\uff5c\036\uff5c\052\uff5c\001\002\000\004\054\275\001\002" +
    "\000\024\013\uff58\015\uff58\017\uff58\021\uff58\022\uff58\024" +
    "\uff58\027\uff58\036\uff58\052\uff58\001\002\000\006\003\uff68" +
    "\011\uff68\001\002\000\004\054\300\001\002\000\024\013" +
    "\uff59\015\uff59\017\uff59\021\uff59\022\uff59\024\uff59\027\uff59" +
    "\036\uff59\052\uff59\001\002\000\004\054\302\001\002\000" +
    "\024\013\uff5b\015\uff5b\017\uff5b\021\uff5b\022\uff5b\024\uff5b" +
    "\027\uff5b\036\uff5b\052\uff5b\001\002\000\006\003\uff69\011" +
    "\uff69\001\002\000\024\013\uff60\015\uff60\017\uff60\021\uff60" +
    "\022\uff60\024\uff60\027\uff60\036\uff60\052\uff60\001\002\000" +
    "\004\054\306\001\002\000\024\013\uff5a\015\uff5a\017\uff5a" +
    "\021\uff5a\022\uff5a\024\uff5a\027\uff5a\036\uff5a\052\uff5a\001" +
    "\002\000\006\007\227\010\226\001\002\000\024\013\uff57" +
    "\015\uff57\017\uff57\021\uff57\022\uff57\024\uff57\027\uff57\036" +
    "\uff57\052\uff57\001\002\000\004\014\367\001\002\000\040" +
    "\013\365\015\322\017\321\020\330\021\331\022\323\027" +
    "\324\030\315\032\320\033\327\034\314\035\313\036\326" +
    "\037\316\040\311\001\002\000\004\014\363\001\002\000" +
    "\004\014\361\001\002\000\004\014\357\001\002\000\004" +
    "\014\355\001\002\000\040\013\uff9e\015\uff9e\017\uff9e\020" +
    "\uff9e\021\uff9e\022\uff9e\027\uff9e\030\uff9e\032\uff9e\033\uff9e" +
    "\034\uff9e\035\uff9e\036\uff9e\037\uff9e\040\uff9e\001\002\000" +
    "\004\014\353\001\002\000\004\014\351\001\002\000\004" +
    "\014\347\001\002\000\004\014\345\001\002\000\004\014" +
    "\343\001\002\000\004\013\342\001\002\000\004\014\340" +
    "\001\002\000\004\014\336\001\002\000\004\014\334\001" +
    "\002\000\004\014\332\001\002\000\004\053\333\001\002" +
    "\000\040\013\uff9c\015\uff9c\017\uff9c\020\uff9c\021\uff9c\022" +
    "\uff9c\027\uff9c\030\uff9c\032\uff9c\033\uff9c\034\uff9c\035\uff9c" +
    "\036\uff9c\037\uff9c\040\uff9c\001\002\000\004\054\335\001" +
    "\002\000\040\013\uff96\015\uff96\017\uff96\020\uff96\021\uff96" +
    "\022\uff96\027\uff96\030\uff96\032\uff96\033\uff96\034\uff96\035" +
    "\uff96\036\uff96\037\uff96\040\uff96\001\002\000\004\054\337" +
    "\001\002\000\040\013\uff92\015\uff92\017\uff92\020\uff92\021" +
    "\uff92\022\uff92\027\uff92\030\uff92\032\uff92\033\uff92\034\uff92" +
    "\035\uff92\036\uff92\037\uff92\040\uff92\001\002\000\004\053" +
    "\341\001\002\000\040\013\uff9d\015\uff9d\017\uff9d\020\uff9d" +
    "\021\uff9d\022\uff9d\027\uff9d\030\uff9d\032\uff9d\033\uff9d\034" +
    "\uff9d\035\uff9d\036\uff9d\037\uff9d\040\uff9d\001\002\000\004" +
    "\011\uffa7\001\002\000\004\054\344\001\002\000\040\013" +
    "\uff98\015\uff98\017\uff98\020\uff98\021\uff98\022\uff98\027\uff98" +
    "\030\uff98\032\uff98\033\uff98\034\uff98\035\uff98\036\uff98\037" +
    "\uff98\040\uff98\001\002\000\004\054\346\001\002\000\040" +
    "\013\uff99\015\uff99\017\uff99\020\uff99\021\uff99\022\uff99\027" +
    "\uff99\030\uff99\032\uff99\033\uff99\034\uff99\035\uff99\036\uff99" +
    "\037\uff99\040\uff99\001\002\000\004\054\350\001\002\000" +
    "\040\013\uff9b\015\uff9b\017\uff9b\020\uff9b\021\uff9b\022\uff9b" +
    "\027\uff9b\030\uff9b\032\uff9b\033\uff9b\034\uff9b\035\uff9b\036" +
    "\uff9b\037\uff9b\040\uff9b\001\002\000\004\054\352\001\002" +
    "\000\040\013\uff9a\015\uff9a\017\uff9a\020\uff9a\021\uff9a\022" +
    "\uff9a\027\uff9a\030\uff9a\032\uff9a\033\uff9a\034\uff9a\035\uff9a" +
    "\036\uff9a\037\uff9a\040\uff9a\001\002\000\004\054\354\001" +
    "\002\000\040\013\uff91\015\uff91\017\uff91\020\uff91\021\uff91" +
    "\022\uff91\027\uff91\030\uff91\032\uff91\033\uff91\034\uff91\035" +
    "\uff91\036\uff91\037\uff91\040\uff91\001\002\000\006\007\227" +
    "\010\226\001\002\000\040\013\uff94\015\uff94\017\uff94\020" +
    "\uff94\021\uff94\022\uff94\027\uff94\030\uff94\032\uff94\033\uff94" +
    "\034\uff94\035\uff94\036\uff94\037\uff94\040\uff94\001\002\000" +
    "\004\053\360\001\002\000\040\013\uff95\015\uff95\017\uff95" +
    "\020\uff95\021\uff95\022\uff95\027\uff95\030\uff95\032\uff95\033" +
    "\uff95\034\uff95\035\uff95\036\uff95\037\uff95\040\uff95\001\002" +
    "\000\004\006\362\001\002\000\040\013\uff90\015\uff90\017" +
    "\uff90\020\uff90\021\uff90\022\uff90\027\uff90\030\uff90\032\uff90" +
    "\033\uff90\034\uff90\035\uff90\036\uff90\037\uff90\040\uff90\001" +
    "\002\000\004\053\364\001\002\000\040\013\uff97\015\uff97" +
    "\017\uff97\020\uff97\021\uff97\022\uff97\027\uff97\030\uff97\032" +
    "\uff97\033\uff97\034\uff97\035\uff97\036\uff97\037\uff97\040\uff97" +
    "\001\002\000\004\011\uffa8\001\002\000\040\013\uff9f\015" +
    "\uff9f\017\uff9f\020\uff9f\021\uff9f\022\uff9f\027\uff9f\030\uff9f" +
    "\032\uff9f\033\uff9f\034\uff9f\035\uff9f\036\uff9f\037\uff9f\040" +
    "\uff9f\001\002\000\006\007\227\010\226\001\002\000\040" +
    "\013\uff93\015\uff93\017\uff93\020\uff93\021\uff93\022\uff93\027" +
    "\uff93\030\uff93\032\uff93\033\uff93\034\uff93\035\uff93\036\uff93" +
    "\037\uff93\040\uff93\001\002\000\006\011\375\055\150\001" +
    "\002\000\004\011\375\001\002\000\004\011\uffbd\001\002" +
    "\000\004\011\uffb9\001\002\000\006\003\376\016\377\001" +
    "\002\000\004\013\u0108\001\002\000\006\003\u0100\005\u0101" +
    "\001\002\000\006\005\u0106\013\u0105\001\002\000\006\003" +
    "\u0102\013\u0103\001\002\000\004\013\u0104\001\002\000\004" +
    "\011\uffb8\001\002\000\004\011\uffb5\001\002\000\004\011" +
    "\uffb7\001\002\000\004\013\u0107\001\002\000\004\011\uffb4" +
    "\001\002\000\004\011\uffb6\001\002\000\004\011\uffba\001" +
    "\002\000\004\011\uff8e\001\002\000\004\011\uff8c\001\002" +
    "\000\004\011\uffa9\001\002\000\004\011\uffa5\001\002\000" +
    "\012\003\u0128\016\u012a\042\u0127\045\u0129\001\002\000\006" +
    "\003\u0115\055\126\001\002\000\004\011\u010e\001\002\000" +
    "\004\011\uff8d\001\002\000\004\011\uff8f\001\002\000\004" +
    "\011\uffa6\001\002\000\006\011\u0118\055\150\001\002\000" +
    "\004\011\u0118\001\002\000\004\011\uff76\001\002\000\004" +
    "\011\uff70\001\002\000\006\003\u0119\016\u011a\001\002\000" +
    "\006\013\u0122\016\u0123\001\002\000\006\003\u011c\042\u011b" +
    "\001\002\000\006\003\u011f\013\u0120\001\002\000\004\042" +
    "\u011d\001\002\000\004\013\u011e\001\002\000\004\011\uff6c" +
    "\001\002\000\004\013\u0121\001\002\000\004\011\uff6f\001" +
    "\002\000\004\011\uff6b\001\002\000\004\011\uff6e\001\002" +
    "\000\004\042\u0124\001\002\000\004\013\u0125\001\002\000" +
    "\004\011\uff6d\001\002\000\004\011\uff71\001\002\000\006" +
    "\003\u0171\013\u0172\001\002\000\010\013\u016c\016\u016d\042" +
    "\u016b\001\002\000\010\003\u0132\013\u0133\034\u0135\001\002" +
    "\000\006\003\u012c\050\u012b\001\002\000\006\003\u012f\013" +
    "\u0130\001\002\000\004\050\u012d\001\002\000\004\013\u012e" +
    "\001\002\000\004\011\uffa3\001\002\000\004\013\u0131\001" +
    "\002\000\004\011\uffa4\001\002\000\004\011\uffa1\001\002" +
    "\000\004\013\u0168\001\002\000\006\003\u0164\011\u013a\001" +
    "\002\000\004\011\uff8b\001\002\000\004\014\u0136\001\002" +
    "\000\004\006\u0137\001\002\000\004\013\u0138\001\002\000" +
    "\004\011\u013a\001\002\000\004\011\u0155\001\002\000\004" +
    "\023\u013c\001\002\000\004\011\uff80\001\002\000\010\003" +
    "\u013d\013\u013e\046\u0140\001\002\000\004\011\u0146\001\002" +
    "\000\004\055\126\001\002\000\004\011\uff7f\001\002\000" +
    "\004\014\u0141\001\002\000\004\053\u0142\001\002\000\004" +
    "\013\u0143\001\002\000\004\055\126\001\002\000\006\011" +
    "\u0146\055\150\001\002\000\004\011\uff7e\001\002\000\006" +
    "\003\u0147\016\u0148\001\002\000\004\013\u0151\001\002\000" +
    "\006\003\u014a\023\u0149\001\002\000\006\003\u014e\013\u014f" +
    "\001\002\000\006\013\u014c\023\u014b\001\002\000\004\013" +
    "\u014d\001\002\000\004\011\uff78\001\002\000\004\011\uff7a" +
    "\001\002\000\004\013\u0150\001\002\000\004\011\uff7b\001" +
    "\002\000\004\011\uff79\001\002\000\004\011\uff77\001\002" +
    "\000\006\011\u0146\055\150\001\002\000\004\011\uff7d\001" +
    "\002\000\004\011\uff7c\001\002\000\010\003\u0158\016\u0159" +
    "\023\u013c\001\002\000\004\011\uff81\001\002\000\004\011" +
    "\uff8a\001\002\000\004\013\u0162\001\002\000\006\003\u015a" +
    "\045\u015b\001\002\000\006\013\u015f\045\u0160\001\002\000" +
    "\006\003\u015c\013\u015d\001\002\000\004\013\u015e\001\002" +
    "\000\004\011\uff86\001\002\000\004\011\uff84\001\002\000" +
    "\004\011\uff83\001\002\000\004\013\u0161\001\002\000\004" +
    "\011\uff85\001\002\000\004\011\uff82\001\002\000\004\011" +
    "\u0155\001\002\000\004\011\u0165\001\002\000\006\003\u0158" +
    "\016\u0159\001\002\000\004\011\uff88\001\002\000\004\011" +
    "\uff89\001\002\000\004\011\u013a\001\002\000\004\011\u0155" +
    "\001\002\000\004\011\uff87\001\002\000\004\013\u0170\001" +
    "\002\000\010\003\uff74\011\uffa0\055\uff74\001\002\000\004" +
    "\050\u016e\001\002\000\004\013\u016f\001\002\000\004\011" +
    "\uffa2\001\002\000\006\003\uff73\055\uff73\001\002\000\004" +
    "\013\u0173\001\002\000\006\003\uff75\055\uff75\001\002\000" +
    "\006\003\uff72\055\uff72\001\002\000\004\011\uffd3\001\002" +
    "\000\006\003\u0176\016\105\001\002\000\004\016\247\001" +
    "\002\000\004\011\u0187\001\002\000\004\011\uff6a\001\002" +
    "\000\006\003\u017a\016\u017b\001\002\000\004\016\u0184\001" +
    "\002\000\006\003\u017d\004\u017c\001\002\000\006\003\u0181" +
    "\013\u0182\001\002\000\006\004\u017e\013\u017f\001\002\000" +
    "\004\013\u0180\001\002\000\004\011\uff61\001\002\000\004" +
    "\011\uff63\001\002\000\004\013\u0183\001\002\000\004\011" +
    "\uff62\001\002\000\004\011\uff64\001\002\000\004\004\u0185" +
    "\001\002\000\004\013\u0186\001\002\000\004\011\uff65\001" +
    "\002\000\004\016\u0188\001\002\000\004\004\u0189\001\002" +
    "\000\004\013\u018a\001\002\000\004\011\uff66\001\002\000" +
    "\004\004\246\001\002\000\004\011\u0191\001\002\000\006" +
    "\011\u0191\055\150\001\002\000\004\011\u0191\001\002\000" +
    "\004\011\uff56\001\002\000\004\011\uff50\001\002\000\006" +
    "\003\u0192\016\u0193\001\002\000\004\016\u019c\001\002\000" +
    "\006\003\u0194\025\u0195\001\002\000\006\013\u019a\025\u0199" +
    "\001\002\000\006\003\u0196\013\u0197\001\002\000\004\013" +
    "\u0198\001\002\000\004\011\uff4f\001\002\000\004\011\uff4d" +
    "\001\002\000\004\013\u019b\001\002\000\004\011\uff4b\001" +
    "\002\000\004\011\uff4c\001\002\000\004\025\u019d\001\002" +
    "\000\004\013\u019e\001\002\000\004\011\uff4e\001\002\000" +
    "\004\011\uff51\001\002\000\004\011\uff52\001\002\000\022" +
    "\003\u01a8\012\u01a4\015\u01a6\017\u01a5\022\u01a7\026\u01aa\027" +
    "\u01a9\030\u01a2\001\002\000\004\014\u01bb\001\002\000\022" +
    "\012\uffcc\013\uffcc\015\uffcc\017\uffcc\022\uffcc\026\uffcc\027" +
    "\uffcc\030\uffcc\001\002\000\004\014\u01b9\001\002\000\004" +
    "\014\u01b7\001\002\000\004\014\u01b5\001\002\000\004\014" +
    "\u01b3\001\002\000\004\013\u01b2\001\002\000\004\014\u01b0" +
    "\001\002\000\004\014\u01ae\001\002\000\022\012\u01a4\013" +
    "\u01ac\015\u01a6\017\u01a5\022\u01a7\026\u01aa\027\u01a9\030\u01a2" +
    "\001\002\000\006\003\uffd6\011\uffd6\001\002\000\022\012" +
    "\uffcd\013\uffcd\015\uffcd\017\uffcd\022\uffcd\026\uffcd\027\uffcd" +
    "\030\uffcd\001\002\000\006\007\227\010\226\001\002\000" +
    "\022\012\uffc5\013\uffc5\015\uffc5\017\uffc5\022\uffc5\026\uffc5" +
    "\027\uffc5\030\uffc5\001\002\000\004\054\u01b1\001\002\000" +
    "\022\012\uffc7\013\uffc7\015\uffc7\017\uffc7\022\uffc7\026\uffc7" +
    "\027\uffc7\030\uffc7\001\002\000\006\003\uffd5\011\uffd5\001" +
    "\002\000\004\054\u01b4\001\002\000\022\012\uffc8\013\uffc8" +
    "\015\uffc8\017\uffc8\022\uffc8\026\uffc8\027\uffc8\030\uffc8\001" +
    "\002\000\004\054\u01b6\001\002\000\022\012\uffca\013\uffca" +
    "\015\uffca\017\uffca\022\uffca\026\uffca\027\uffca\030\uffca\001" +
    "\002\000\004\054\u01b8\001\002\000\022\012\uffc9\013\uffc9" +
    "\015\uffc9\017\uffc9\022\uffc9\026\uffc9\027\uffc9\030\uffc9\001" +
    "\002\000\004\053\u01ba\001\002\000\022\012\uffcb\013\uffcb" +
    "\015\uffcb\017\uffcb\022\uffcb\026\uffcb\027\uffcb\030\uffcb\001" +
    "\002\000\004\053\u01bc\001\002\000\022\012\uffc6\013\uffc6" +
    "\015\uffc6\017\uffc6\022\uffc6\026\uffc6\027\uffc6\030\uffc6\001" +
    "\002\000\010\002\uffe2\003\uffe2\011\uffe2\001\002\000\010" +
    "\003\u01c0\016\u01c1\044\u01a1\001\002\000\004\011\uffd9\001" +
    "\002\000\006\013\u01c9\016\u01ca\001\002\000\006\003\u01c2" +
    "\041\u01c3\001\002\000\004\041\u01c7\001\002\000\006\003" +
    "\u01c4\013\u01c5\001\002\000\004\013\u01c6\001\002\000\010" +
    "\002\uffe7\003\uffe7\011\uffe7\001\002\000\010\002\uffe6\003" +
    "\uffe6\011\uffe6\001\002\000\004\013\u01c8\001\002\000\010" +
    "\002\uffe4\003\uffe4\011\uffe4\001\002\000\010\002\uffe3\003" +
    "\uffe3\011\uffe3\001\002\000\004\041\u01cb\001\002\000\004" +
    "\013\u01cc\001\002\000\010\002\uffe5\003\uffe5\011\uffe5\001" +
    "\002\000\010\002\uffe1\003\uffe1\011\uffe1\001\002\000\006" +
    "\003\u01c0\016\u01c1\001\002\000\010\002\ufff9\003\ufff9\011" +
    "\ufff9\001\002\000\006\003\ufff6\011\ufff6\001\002\000\006" +
    "\011\u01d4\055\150\001\002\000\004\011\u01d4\001\002\000" +
    "\006\003\ufff2\011\ufff2\001\002\000\006\003\u01d5\016\u01d6" +
    "\001\002\000\006\013\u01de\016\u01df\001\002\000\006\003" +
    "\u01d7\043\u01d8\001\002\000\004\043\u01dc\001\002\000\006" +
    "\003\u01d9\013\u01da\001\002\000\004\013\u01db\001\002\000" +
    "\006\003\ufff1\011\ufff1\001\002\000\006\003\ufff0\011\ufff0" +
    "\001\002\000\004\013\u01dd\001\002\000\006\003\uffee\011" +
    "\uffee\001\002\000\006\003\uffed\011\uffed\001\002\000\004" +
    "\043\u01e0\001\002\000\004\013\u01e1\001\002\000\006\003" +
    "\uffef\011\uffef\001\002\000\006\003\ufff3\011\ufff3\001\002" +
    "\000\006\003\u01e4\013\u01e5\001\002\000\004\013\u01e6\001" +
    "\002\000\006\003\ufff5\055\ufff5\001\002\000\006\003\ufff4" +
    "\055\ufff4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01e4\000\022\002\003\003\007\004\006\022\014\023" +
    "\013\054\012\055\005\061\011\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\024\u01d0\057\u01cf\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\004\u01ce\061\011" +
    "\001\001\000\012\005\052\006\055\063\050\064\054\001" +
    "\001\000\002\001\001\000\006\004\017\061\011\001\001" +
    "\000\014\003\015\004\006\023\016\055\005\061\011\001" +
    "\001\000\002\001\001\000\006\004\017\061\011\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\026\025\027\030\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\040\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\062\u01cc\001\001\000" +
    "\010\006\u01be\062\u01bc\064\054\001\001\000\002\001\001" +
    "\000\032\007\066\010\067\014\072\015\070\016\060\021" +
    "\056\052\063\053\071\065\073\067\065\071\062\073\057" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\017" +
    "\u018e\024\u018c\052\u018b\053\071\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\072\u0177\001\001\000\002\001" +
    "\001\000\004\066\u0173\001\001\000\020\011\u010b\012\u010f" +
    "\013\u0109\043\u0110\047\u010a\070\u010c\076\u010e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\024\370\051\372\001\001\000\030\007\075\010\067\015" +
    "\070\016\060\021\056\052\063\053\071\066\076\067\065" +
    "\071\062\073\057\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\034\311" +
    "\035\316\001\001\000\006\036\255\037\254\001\001\000" +
    "\002\001\001\000\006\040\242\041\115\001\001\000\006" +
    "\032\202\033\201\001\001\000\002\001\001\000\006\040" +
    "\116\041\115\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\041\120\102\117\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\020\126\024\123\052\122\053\071\001\001" +
    "\000\004\075\151\001\001\000\004\075\150\001\001\000" +
    "\004\075\131\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\033\234\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\227\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\237\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\041\120\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\303\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\307\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\035\365\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\355\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\367\001\001\000\002\001\001\000" +
    "\004\100\u0108\001\001\000\004\100\373\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\024\u0113\050\u0115\001\001\000\014\013\u0111\043" +
    "\u0110\047\u010a\070\u0112\076\u010e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\077\u0125\001" +
    "\001\000\004\077\u0116\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\044\u0133\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\042\u0162\045" +
    "\u013a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\042\u0138\045\u013a\001" +
    "\001\000\006\045\u0155\060\u0156\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u013e\001\001\000\004\101" +
    "\u0153\001\001\000\004\024\u0151\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\024\u0143\001\001\000\004\101\u0144\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\101\u0152\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\045\u0155\060\u0166\001\001\000\004" +
    "\060\u0165\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\042\u0168\045\u013a\001\001\000\006" +
    "\045\u0155\060\u0169\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\074\u019f\001\001\000\004\074\u019e\001\001\000\004" +
    "\074\u018f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\030\u01aa\031\u01a2\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\031\u01ac\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\u01ae\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\056\u01e1\001\001\000\004\056\u01d2" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoGxml$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoGxml$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoGxml$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    protected int error_sync_size () {
       return 1;   
    }

    public void syntax_error(Symbol s){
        System.out.println("Error sintactico lexema \"" + s.value+"\" en la Columna: "+(s.right+1) +", Linea: "+(s.left+1)+ " no esperado"+s.sym);
		NodoError Nerror = new NodoError("sintactico");
		Nerror.descripcion = "caracter no reconocido: "+ s.value;
		Nerror.linea = String.valueOf(s.left+1);
		Nerror.columna = String.valueOf(s.right+1);
		errores.add(Nerror);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error sintactico \"" + s.value+"\" en la Linea: "+(s.right+1) +", Columna: "+(s.left+1)+ "");
        /*Nodo_error nuevo = new Nodo_error();
        nuevo.dato = String.valueOf(s.value);
        nuevo.linea = (s.left+1);
        nuevo.columna=(s.right);
        Errores.add(nuevo);
        errores=true;*/
    }
    public NodoGxml regresar_raiz(){
        return RCCSS;
    }
 /*codig de usuario */
 String total = "";
 public NodoGxml RCCSS = new NodoGxml();
 private Boolean texto_ini = false;
 private Control control = new Control();
 private Boton botonaso = new Boton();
 private ListaDatos lista = new ListaDatos();
 public ArrayList<NodoError> errores = new ArrayList();
 //public ArrayList<Nodo> e = new ArrayList<Nodo>();


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$SintacticoGxml$actions {


    public String estado="";

  private final SintacticoGxml parser;

  /** Constructor */
  CUP$SintacticoGxml$actions(SintacticoGxml parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$SintacticoGxml$do_action_part00000000(
    int                        CUP$SintacticoGxml$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoGxml$parser,
    java.util.Stack            CUP$SintacticoGxml$stack,
    int                        CUP$SintacticoGxml$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoGxml$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoGxml$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Start EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoGxml$parser.done_parsing();
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Start ::= Ini 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoGxml e1 = (NodoGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RCCSS.Analizar_Nombres_Ventanas(errores); RCCSS.Analizar_Importaciones(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Start",42, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Ini ::= Cuerpo_Ini Cuerpo_GEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Ini",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Ini ::= Cuerpo_GEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Ini",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo_Ini ::= Cuerpo_Ini ES_IMP 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Ini",16, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo_Ini ::= ES_IMP 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Ini",16, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Cuerpo_GEN ::= Cuerpo_GEN ES_VEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_GEN",17, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Cuerpo_GEN ::= ES_VEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_GEN",17, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Cuerpo_GEN ::= error ES_VEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_GEN",17, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // BOL ::= RVER 
            {
              String RESULT =null;
		RESULT ="verdadero";
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOL",19, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // BOL ::= RFAL 
            {
              String RESULT =null;
		RESULT ="falso";
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOL",19, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ES_IMP ::= ES_IMP1 ES_IMP2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP",1, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ES_IMP1 ::= MAY RIMP MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP1",43, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ES_IMP1 ::= MAY RIMP error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP1",43, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ES_IMP2 ::= SUM_TEXT ES_IMP3 
            {
              Object RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		EDato nuevo = new EDato(e2,e2left+1,e2right+1); RCCSS.Importaciones.add(nuevo); 
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP2",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ES_IMP2 ::= error ES_IMP3 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP2",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ES_IMP3 ::= MAY DIA RIMP MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP3",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ES_IMP3 ::= MAY DIA RIMP error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP3",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ES_IMP3 ::= MAY error DIA RIMP MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP3",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ES_IMP3 ::= MAY DIA error RIMP MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP3",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ES_IMP3 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP3",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SUM_TEXT ::= SUM_TEXT TEXT 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		if(texto_ini){texto_ini=false; RESULT=e1.toString()+e2.toString();}else{RESULT=e1.toString()+" "+e2.toString(); }
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("SUM_TEXT",18, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SUM_TEXT ::= TEXT 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1.toString(); texto_ini=true;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("SUM_TEXT",18, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ES_VEN ::= ES_VEN1 ES_VEN3 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN",2, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ES_VEN1 ::= MAY RVEN EST_VEN_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); RCCSS.Ventanas.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN1",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ES_VEN1 ::= error MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ RCCSS.Ventanas.add(v); 
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN1",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ES_VEN2 ::= MAY DIA RVEN MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ES_VEN2 ::= MAY DIA RVEN error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ES_VEN2 ::= MAY error DIA RVEN MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ES_VEN2 ::= MAY DIA error RVEN MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ES_VEN2 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ES_VEN3 ::= Cuerpo_Vent ES_VEN2 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN3",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ES_VEN3 ::= error ES_VEN2 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN3",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // EST_VEN_COM ::= EST_VEN_COM EST_VEN 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN_COM",20, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // EST_VEN_COM ::= EST_VEN 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN_COM",20, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // EST_VEN ::= RID IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EST_VEN ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // EST_VEN ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // EST_VEN ::= RAIN IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Inicial"; nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // EST_VEN ::= RAFI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Final"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Cuerpo_Vent ::= Cuerpo_Vent ES_CON 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Vent",3, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Cuerpo_Vent ::= ES_CON 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Vent",3, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ES_CON ::= ES_CON1 ES_CON2 
            {
              NodoGxml RESULT =null;
		
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON",4, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ES_CON1 ::= MAY RCON EST_CON_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Contenedor v = new Contenedor(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON1",50, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ES_CON1 ::= MAY RCON error MEN 
            {
              Object RESULT =null;
		Contenedor v = new Contenedor(); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON1",50, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ES_CON2 ::= Cuerpo_CONTE ES_CON3 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ES_CON2 ::= error ES_CON3 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ES_CON3 ::= MAY DIA RCON MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ES_CON3 ::= MAY DIA RCON error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ES_CON3 ::= MAY error DIA RCON MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ES_CON3 ::= MAY DIA error RCON MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ES_CON3 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // EST_CON_COM ::= EST_CON_COM EST_CON 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON_COM",22, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // EST_CON_COM ::= EST_CON 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON_COM",22, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // EST_CON ::= RID IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // EST_CON ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // EST_CON ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // EST_CON ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // EST_CON ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // EST_CON ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // EST_CON ::= RBOR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Borde"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Cuerpo_CONTE ::= Cuerpo_CONTE Tipo_Conte 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CONTE",10, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Cuerpo_CONTE ::= Tipo_Conte 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CONTE",10, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Tipo_Conte ::= ES_TEX 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Textos.add(e1); 
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Tipo_Conte ::= ES_CTR 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Tipo_Conte ::= ES_MUL 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Tipo_Conte ::= ES_BOT 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Tipo_Conte ::= ES_ENV 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ES_TEX ::= ES_TEX1 ES_TEX2 
            {
              Texto RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e2 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 e1.Analizar_Valor(e2,errores); RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX",40, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ES_TEX1 ::= MAY RTEX EST_TEX_COM MEN 
            {
              Texto RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Texto v = new Texto();  	v.Analizar_Attributos(e1,errores); RESULT=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX1",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ES_TEX1 ::= MAY RTEX error MEN 
            {
              Texto RESULT =null;
		Texto v= new Texto(); RESULT = v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX1",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ES_TEX2 ::= SUM_TEXT ES_TEX3 
            {
              EDato RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		EDato nuevo= new EDato(e2,e2left+1,e2right+1); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX2",39, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ES_TEX2 ::= error ES_TEX3 
            {
              EDato RESULT =null;
		EDato nuevo= new EDato("",0,0); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX2",39, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ES_TEX3 ::= MAY DIA RTEX MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX3",62, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ES_TEX3 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX3",62, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ES_TEX3 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX3",62, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ES_TEX3 ::= MAY DIA RTEX error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX3",62, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ES_TEX3 ::= MAY DIA error RTEX MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX3",62, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // EST_TEX_COM ::= EST_TEX_COM EST_TEX 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX_COM",24, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // EST_TEX_COM ::= EST_TEX 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX_COM",24, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // EST_TEX ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // EST_TEX ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // EST_TEX ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // EST_TEX ::= RFUE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // EST_TEX ::= RTAM IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam";			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // EST_TEX ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EST_TEX ::= RNEG IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EST_TEX ::= RCUR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ES_CTR ::= ES_CTR1 Cuerpo_CTR_1 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR",6, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ES_CTR1 ::= MAY RCTR EST_CTR_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Control v = new Control(); control=v; v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR1",53, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ES_CTR1 ::= MAY RCTR error MEN 
            {
              Object RESULT =null;
		Control v = new Control(); control=v;  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR1",53, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Cuerpo_CTR_1 ::= Cuerpo_CTR ES_CTR2 
            {
              NodoGxml RESULT =null;
		control.Analizar_Lista_Datos(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR_1",7, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Cuerpo_CTR_1 ::= ES_CTR2 
            {
              NodoGxml RESULT =null;
		control.Analizar_Lista_Datos(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR_1",7, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ES_CTR2 ::= MAY DIA RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ES_CTR2 ::= MAY DIA error RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // ES_CTR2 ::= MAY error DIA RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ES_CTR2 ::= MAY DIA RCTR error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ES_CTR2 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // EST_CTR_COM ::= EST_CTR_COM EST_CTR 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR_COM",26, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // EST_CTR_COM ::= EST_CTR 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR_COM",26, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // EST_CTR ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // EST_CTR ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // EST_CTR ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X";	 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // EST_CTR ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // EST_CTR ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // EST_CTR ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // EST_CTR ::= RFUE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // EST_CTR ::= RTAM IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // EST_CTR ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // EST_CTR ::= RNEG IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // EST_CTR ::= RCUR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // EST_CTR ::= RMAX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="maximo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // EST_CTR ::= RMIN IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="minimo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // EST_CTR ::= RACI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Cuerpo_CTR ::= Cuerpo_CTR Tipos_CTR 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR",8, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Cuerpo_CTR ::= Tipos_CTR 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR",8, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Tipos_CTR ::= ES_LDA 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		control.Datos=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipos_CTR",9, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Tipos_CTR ::= ES_DEF 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		control.Defecto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipos_CTR",9, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ES_LDA ::= MAY RLDA EST_LDA_COM 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA",33, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // EST_LDA_COM ::= RACI IGU MORE MEN Cuerpo_LDA ES_LDA2 
            {
              ListaDatos RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		e1.accion=e2.toString(); RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // EST_LDA_COM ::= MEN Cuerpo_LDA ES_LDA2 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // EST_LDA_COM ::= MEN error ES_LDA2 
            {
              ListaDatos RESULT =null;
		ListaDatos nuevo = new ListaDatos(); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // EST_LDA_COM ::= error MEN Cuerpo_LDA ES_LDA2 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // ES_LDA2 ::= MAY DIA RLDA MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA2",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // ES_LDA2 ::= MAY DIA error RLDA MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA2",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // ES_LDA2 ::= MAY DIA RLDA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA2",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ES_LDA2 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA2",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // ES_LDA2 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA2",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Cuerpo_LDA ::= Cuerpo_LDA ES_DA 
            {
              ListaDatos RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		ListaDatos e2 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.Datos.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_LDA",32, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Cuerpo_LDA ::= ES_DA 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		ListaDatos nuevo = new ListaDatos(); nuevo.Datos.add(e1); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_LDA",32, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // ES_DA ::= MAY RDAT EST_DA_COM 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA",35, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // EST_DA_COM ::= REFE IGU CAD MEN SUM_TEXT ES_DA2 
            {
              EDato RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e2left+1; nuevo.columna=e2right+1; nuevo.referencia=e2.toString(); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_DA_COM",36, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // EST_DA_COM ::= MEN SUM_TEXT ES_DA2 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_DA_COM",36, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // EST_DA_COM ::= error ES_DA2 
            {
              EDato RESULT =null;
		EDato nuevo= new EDato(); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_DA_COM",36, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // ES_DA2 ::= MAY DIA RDAT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA2",63, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // ES_DA2 ::= MAY DIA error RDAT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA2",63, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // ES_DA2 ::= MAY DIA RDAT error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA2",63, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // ES_DA2 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA2",63, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // ES_DA2 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA2",63, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // ES_DEF ::= ES_DEF1 ES_DEF2 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF",37, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ES_DEF1 ::= MAY RDEF MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF1",60, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ES_DEF1 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF1",60, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ES_DEF1 ::= MAY error RDEF MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF1",60, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ES_DEF1 ::= MAY RDEF error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF1",60, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // ES_DEF2 ::= SUM_TEXT ES_DEF3 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1.trim(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF2",38, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // ES_DEF2 ::= error ES_DEF3 
            {
              EDato RESULT =null;
		EDato nuevo= new EDato(); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF2",38, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ES_DEF3 ::= MAY DIA RDEF MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF3",61, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ES_DEF3 ::= MAY error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF3",61, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ES_DEF3 ::= MAY error DIA RDEF MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF3",61, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ES_DEF3 ::= MAY DIA error RDEF MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF3",61, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ES_DEF3 ::= MAY DIA RDEF error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF3",61, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ES_MUL ::= ES_MUL1 ES_MUL2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL",11, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ES_MUL1 ::= MAY RMUL EST_MUL_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Multimedia v = new Multimedia(); v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",55, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ES_MUL1 ::= MAY RMUL error MEN 
            {
              Object RESULT =null;
		Multimedia v = new Multimedia();  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",55, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ES_MUL1 ::= MAY error RMUL MEN 
            {
              Object RESULT =null;
		Multimedia v = new Multimedia();  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",55, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // ES_MUL2 ::= error MAY DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // ES_MUL2 ::= MAY error DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ES_MUL2 ::= MAY DIA RMUL error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // ES_MUL2 ::= MAY DIA error RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // ES_MUL2 ::= MAY DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // ES_MUL2 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",56, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // EST_MUL_COM ::= EST_MUL_COM EST_MUL 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL_COM",28, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // EST_MUL_COM ::= EST_MUL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL_COM",28, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // EST_MUL ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // EST_MUL ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // EST_MUL ::= RPAT IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Path"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // EST_MUL ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // EST_MUL ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // EST_MUL ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // EST_MUL ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // EST_MUL ::= RAUT IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="auto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // ES_BOT ::= ES_BOT1 Cuerpo_BOT 
            {
              NodoGxml RESULT =null;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT",12, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // ES_BOT1 ::= MAY RBOT EST_BOT_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Boton v = new Boton("boton"); v.Analizar_Attributos(e1,errores); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",57, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // ES_BOT1 ::= MAY RBOT error MEN 
            {
              Object RESULT =null;
		Boton v = new Boton("boton"); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",57, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // ES_BOT1 ::= MAY RBOT MEN 
            {
              Object RESULT =null;
		Boton v = new Boton("boton"); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",57, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Cuerpo_BOT ::= ES_TEX ES_BOT2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.Etexto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Cuerpo_BOT ::= SUM_TEXT ES_BOT2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.texto=e1.replace("\"", "");
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Cuerpo_BOT ::= error ES_BOT2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // ES_BOT2 ::= MAY DIA RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",58, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // ES_BOT2 ::= MAY error DIA RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",58, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // ES_BOT2 ::= MAY DIA RBOT error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",58, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // ES_BOT2 ::= MAY DIA error RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",58, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // ES_BOT2 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",58, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // EST_BOT_COM ::= EST_BOT_COM EST_BOT 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT_COM",30, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // EST_BOT_COM ::= EST_BOT 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT_COM",30, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // EST_BOT ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // EST_BOT ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // EST_BOT ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // EST_BOT ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // EST_BOT ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // EST_BOT ::= REFE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="referencia"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // EST_BOT ::= RACI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // NT$0 ::= 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
Boton v = new Boton("enviar"); v.Analizar_Attributos(e1,errores); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("NT$0",64, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // ES_ENV ::= MAY RENV EST_BOT_COM NT$0 MEN Cuerpo_ENV 
            {
              NodoGxml RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (NodoGxml) ((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).value;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV",15, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // Cuerpo_ENV ::= ES_TEX ES_ENV2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.Etexto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // Cuerpo_ENV ::= SUM_TEXT ES_ENV2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.texto=e1.replace("\"", "");
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // Cuerpo_ENV ::= error ES_ENV2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // ES_ENV2 ::= MAY DIA RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",59, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // ES_ENV2 ::= MAY error DIA RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",59, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // ES_ENV2 ::= MAY DIA RENV error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",59, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // ES_ENV2 ::= MAY DIA error RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",59, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // ES_ENV2 ::= MAY DIA error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",59, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$SintacticoGxml$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$SintacticoGxml$do_action(
    int                        CUP$SintacticoGxml$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoGxml$parser,
    java.util.Stack            CUP$SintacticoGxml$stack,
    int                        CUP$SintacticoGxml$top)
    throws java.lang.Exception
    {
              return CUP$SintacticoGxml$do_action_part00000000(
                               CUP$SintacticoGxml$act_num,
                               CUP$SintacticoGxml$parser,
                               CUP$SintacticoGxml$stack,
                               CUP$SintacticoGxml$top);
    }
}

}
