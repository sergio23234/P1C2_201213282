
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java.io.FileReader;
import java_cup.runtime.Symbol;
import ComponentGxml.*;
import Principal.NodoError;
import java_cup.runtime.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class SintacticoGxml extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public SintacticoGxml() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public SintacticoGxml(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintacticoGxml(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\233\000\002\002\004\000\002\051\003\000\002\002" +
    "\004\000\002\002\003\000\002\022\004\000\002\022\003" +
    "\000\002\023\004\000\002\023\003\000\002\025\003\000" +
    "\002\025\003\000\002\003\011\000\002\024\004\000\002" +
    "\024\003\000\002\004\004\000\002\052\006\000\002\052" +
    "\004\000\002\053\006\000\002\053\007\000\002\053\007" +
    "\000\002\053\004\000\002\054\004\000\002\054\004\000" +
    "\002\026\004\000\002\026\003\000\002\027\005\000\002" +
    "\027\005\000\002\027\005\000\002\027\005\000\002\027" +
    "\005\000\002\005\004\000\002\005\003\000\002\006\004" +
    "\000\002\055\006\000\002\055\006\000\002\056\004\000" +
    "\002\056\004\000\002\057\006\000\002\057\007\000\002" +
    "\057\007\000\002\057\004\000\002\030\004\000\002\030" +
    "\003\000\002\031\005\000\002\031\005\000\002\031\005" +
    "\000\002\031\005\000\002\031\005\000\002\031\005\000" +
    "\002\031\005\000\002\014\004\000\002\014\003\000\002" +
    "\007\003\000\002\007\003\000\002\007\003\000\002\007" +
    "\003\000\002\007\003\000\002\050\013\000\002\032\004" +
    "\000\002\032\003\000\002\033\005\000\002\033\005\000" +
    "\002\033\005\000\002\033\005\000\002\033\005\000\002" +
    "\033\005\000\002\033\005\000\002\033\005\000\002\010" +
    "\004\000\002\060\006\000\002\060\006\000\002\060\005" +
    "\000\002\011\004\000\002\011\003\000\002\061\006\000" +
    "\002\061\007\000\002\061\007\000\002\061\007\000\002" +
    "\034\004\000\002\034\003\000\002\035\005\000\002\035" +
    "\005\000\002\035\005\000\002\035\005\000\002\035\005" +
    "\000\002\035\005\000\002\035\005\000\002\035\005\000" +
    "\002\035\005\000\002\035\005\000\002\035\005\000\002" +
    "\035\005\000\002\035\005\000\002\035\005\000\002\012" +
    "\004\000\002\012\003\000\002\013\003\000\002\013\003" +
    "\000\002\043\005\000\002\044\013\000\002\044\010\000" +
    "\002\042\004\000\002\042\003\000\002\045\005\000\002" +
    "\067\002\000\002\046\014\000\002\046\010\000\002\047" +
    "\012\000\002\015\004\000\002\062\006\000\002\062\006" +
    "\000\002\062\006\000\002\063\007\000\002\063\007\000" +
    "\002\063\007\000\002\063\007\000\002\063\006\000\002" +
    "\036\004\000\002\036\003\000\002\037\005\000\002\037" +
    "\005\000\002\037\005\000\002\037\005\000\002\037\005" +
    "\000\002\037\005\000\002\037\005\000\002\037\005\000" +
    "\002\016\004\000\002\064\006\000\002\064\006\000\002" +
    "\064\005\000\002\017\004\000\002\017\004\000\002\017" +
    "\004\000\002\065\006\000\002\065\007\000\002\065\007" +
    "\000\002\065\007\000\002\040\004\000\002\040\003\000" +
    "\002\041\005\000\002\041\005\000\002\041\005\000\002" +
    "\041\005\000\002\041\005\000\002\041\005\000\002\041" +
    "\005\000\002\070\002\000\002\021\010\000\002\020\004" +
    "\000\002\020\004\000\002\020\004\000\002\066\006\000" +
    "\002\066\007\000\002\066\007\000\002\066\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0193\000\006\003\010\011\005\001\002\000\004\002" +
    "\000\001\002\000\006\041\021\043\u0190\001\002\000\010" +
    "\002\ufffa\003\ufffa\011\ufffa\001\002\000\006\003\ufffc\011" +
    "\ufffc\001\002\000\004\013\u018f\001\002\000\006\003\047" +
    "\011\051\001\002\000\004\002\045\001\002\000\010\002" +
    "\ufffe\003\010\011\020\001\002\000\006\003\010\011\005" +
    "\001\002\000\006\003\ufffd\011\ufffd\001\002\000\010\002" +
    "\uffff\003\010\011\020\001\002\000\010\002\ufffb\003\ufffb" +
    "\011\ufffb\001\002\000\004\041\021\001\002\000\014\012" +
    "\026\021\022\030\030\047\023\051\025\001\002\000\004" +
    "\014\043\001\002\000\004\014\041\001\002\000\016\012" +
    "\026\013\040\021\022\030\030\047\023\051\025\001\002" +
    "\000\004\014\035\001\002\000\004\014\033\001\002\000" +
    "\016\012\uffea\013\uffea\021\uffea\030\uffea\047\uffea\051\uffea" +
    "\001\002\000\004\014\031\001\002\000\004\053\032\001" +
    "\002\000\016\012\uffe7\013\uffe7\021\uffe7\030\uffe7\047\uffe7" +
    "\051\uffe7\001\002\000\004\053\034\001\002\000\016\012" +
    "\uffe9\013\uffe9\021\uffe9\030\uffe9\047\uffe9\051\uffe9\001\002" +
    "\000\004\006\036\001\002\000\016\012\uffe6\013\uffe6\021" +
    "\uffe6\030\uffe6\047\uffe6\051\uffe6\001\002\000\016\012\uffeb" +
    "\013\uffeb\021\uffeb\030\uffeb\047\uffeb\051\uffeb\001\002\000" +
    "\006\003\ufff3\011\ufff3\001\002\000\004\006\042\001\002" +
    "\000\016\012\uffe5\013\uffe5\021\uffe5\030\uffe5\047\uffe5\051" +
    "\uffe5\001\002\000\004\053\044\001\002\000\016\012\uffe8" +
    "\013\uffe8\021\uffe8\030\uffe8\047\uffe8\051\uffe8\001\002\000" +
    "\004\002\001\001\002\000\010\002\ufff4\003\ufff4\011\ufff4" +
    "\001\002\000\006\003\u0180\011\u018e\001\002\000\006\003" +
    "\u0180\011\u0181\001\002\000\004\044\u0163\001\002\000\006" +
    "\003\063\011\057\001\002\000\006\003\uffe3\011\uffe3\001" +
    "\002\000\006\003\uffca\011\uffca\001\002\000\010\003\u0151" +
    "\011\126\055\123\001\002\000\006\003\uffcb\011\uffcb\001" +
    "\002\000\016\003\u014e\004\077\005\102\025\101\031\104" +
    "\050\076\001\002\000\006\003\u013b\011\u013d\001\002\000" +
    "\006\003\uffce\011\uffce\001\002\000\004\011\376\001\002" +
    "\000\006\003\073\011\367\001\002\000\006\003\uffcf\011" +
    "\uffcf\001\002\000\006\003\uffcd\011\uffcd\001\002\000\006" +
    "\003\uffcc\011\uffcc\001\002\000\006\003\073\011\071\001" +
    "\002\000\006\003\uffe2\011\uffe2\001\002\000\020\003\100" +
    "\004\077\005\102\016\103\025\101\031\104\050\076\001" +
    "\002\000\006\003\uffd0\011\uffd0\001\002\000\004\013\075" +
    "\001\002\000\006\003\uffdf\011\uffdf\001\002\000\006\003" +
    "\uffda\011\uffda\001\002\000\040\003\322\015\317\017\316" +
    "\020\324\021\326\022\320\027\321\030\312\032\315\033" +
    "\325\034\310\035\311\036\323\037\313\040\306\001\002" +
    "\000\024\003\256\015\254\017\251\021\262\022\255\024" +
    "\261\027\257\036\260\052\250\001\002\000\010\004\242" +
    "\013\243\016\244\001\002\000\024\003\236\013\235\015" +
    "\110\017\107\022\111\027\112\034\106\036\113\046\105" +
    "\001\002\000\022\015\201\017\200\020\203\030\176\035" +
    "\175\036\202\037\177\040\172\001\002\000\004\044\166" +
    "\001\002\000\020\015\110\017\107\022\111\027\112\034" +
    "\106\036\113\046\105\001\002\000\004\014\164\001\002" +
    "\000\004\014\162\001\002\000\004\014\160\001\002\000" +
    "\004\014\156\001\002\000\004\014\154\001\002\000\004" +
    "\014\152\001\002\000\004\014\150\001\002\000\022\013" +
    "\uff77\015\uff77\017\uff77\022\uff77\027\uff77\034\uff77\036\uff77" +
    "\046\uff77\001\002\000\022\013\uff6f\015\110\017\107\022" +
    "\111\027\112\034\106\036\113\046\105\001\002\000\004" +
    "\013\120\001\002\000\022\013\uff78\015\uff78\017\uff78\022" +
    "\uff78\027\uff78\034\uff78\036\uff78\046\uff78\001\002\000\010" +
    "\003\124\011\126\055\123\001\002\000\004\011\127\001" +
    "\002\000\006\011\127\055\145\001\002\000\006\011\ufff5" +
    "\055\ufff5\001\002\000\004\011\127\001\002\000\006\003" +
    "\uff6e\011\uff6e\001\002\000\004\005\102\001\002\000\006" +
    "\003\131\016\132\001\002\000\006\003\uff6b\011\uff6b\001" +
    "\002\000\004\016\142\001\002\000\006\003\133\031\134" +
    "\001\002\000\004\031\140\001\002\000\006\003\135\013" +
    "\136\001\002\000\004\013\137\001\002\000\006\003\uff6a" +
    "\011\uff6a\001\002\000\006\003\uff68\011\uff68\001\002\000" +
    "\004\013\141\001\002\000\006\003\uff67\011\uff67\001\002" +
    "\000\004\031\143\001\002\000\004\013\144\001\002\000" +
    "\006\003\uff69\011\uff69\001\002\000\006\011\ufff6\055\ufff6" +
    "\001\002\000\006\003\uff6c\011\uff6c\001\002\000\006\003" +
    "\uff6d\011\uff6d\001\002\000\004\053\151\001\002\000\022" +
    "\013\uff76\015\uff76\017\uff76\022\uff76\027\uff76\034\uff76\036" +
    "\uff76\046\uff76\001\002\000\004\054\153\001\002\000\022" +
    "\013\uff72\015\uff72\017\uff72\022\uff72\027\uff72\034\uff72\036" +
    "\uff72\046\uff72\001\002\000\004\054\155\001\002\000\022" +
    "\013\uff73\015\uff73\017\uff73\022\uff73\027\uff73\034\uff73\036" +
    "\uff73\046\uff73\001\002\000\004\054\157\001\002\000\022" +
    "\013\uff75\015\uff75\017\uff75\022\uff75\027\uff75\034\uff75\036" +
    "\uff75\046\uff75\001\002\000\004\054\161\001\002\000\022" +
    "\013\uff74\015\uff74\017\uff74\022\uff74\027\uff74\034\uff74\036" +
    "\uff74\046\uff74\001\002\000\004\006\163\001\002\000\022" +
    "\013\uff70\015\uff70\017\uff70\022\uff70\027\uff70\034\uff70\036" +
    "\uff70\046\uff70\001\002\000\004\053\165\001\002\000\022" +
    "\013\uff71\015\uff71\017\uff71\022\uff71\027\uff71\034\uff71\036" +
    "\uff71\046\uff71\001\002\000\006\003\167\013\170\001\002" +
    "\000\004\013\171\001\002\000\006\003\uffdd\011\uffdd\001" +
    "\002\000\006\003\uffdc\011\uffdc\001\002\000\004\014\233" +
    "\001\002\000\024\013\uffc7\015\uffc7\017\uffc7\020\uffc7\030" +
    "\uffc7\035\uffc7\036\uffc7\037\uffc7\040\uffc7\001\002\000\024" +
    "\013\225\015\201\017\200\020\203\030\176\035\175\036" +
    "\202\037\177\040\172\001\002\000\004\014\222\001\002" +
    "\000\004\014\220\001\002\000\004\014\214\001\002\000" +
    "\004\014\212\001\002\000\004\014\210\001\002\000\004" +
    "\014\206\001\002\000\004\014\204\001\002\000\004\054" +
    "\205\001\002\000\024\013\uffc2\015\uffc2\017\uffc2\020\uffc2" +
    "\030\uffc2\035\uffc2\036\uffc2\037\uffc2\040\uffc2\001\002\000" +
    "\004\053\207\001\002\000\024\013\uffc6\015\uffc6\017\uffc6" +
    "\020\uffc6\030\uffc6\035\uffc6\036\uffc6\037\uffc6\040\uffc6\001" +
    "\002\000\004\054\211\001\002\000\024\013\uffc5\015\uffc5" +
    "\017\uffc5\020\uffc5\030\uffc5\035\uffc5\036\uffc5\037\uffc5\040" +
    "\uffc5\001\002\000\004\054\213\001\002\000\024\013\uffc4" +
    "\015\uffc4\017\uffc4\020\uffc4\030\uffc4\035\uffc4\036\uffc4\037" +
    "\uffc4\040\uffc4\001\002\000\006\007\217\010\215\001\002" +
    "\000\050\012\ufff8\013\ufff8\015\ufff8\017\ufff8\020\ufff8\021" +
    "\ufff8\022\ufff8\024\ufff8\026\ufff8\027\ufff8\030\ufff8\032\ufff8" +
    "\033\ufff8\034\ufff8\035\ufff8\036\ufff8\037\ufff8\040\ufff8\052" +
    "\ufff8\001\002\000\024\013\uffc0\015\uffc0\017\uffc0\020\uffc0" +
    "\030\uffc0\035\uffc0\036\uffc0\037\uffc0\040\uffc0\001\002\000" +
    "\050\012\ufff9\013\ufff9\015\ufff9\017\ufff9\020\ufff9\021\ufff9" +
    "\022\ufff9\024\ufff9\026\ufff9\027\ufff9\030\ufff9\032\ufff9\033" +
    "\ufff9\034\ufff9\035\ufff9\036\ufff9\037\ufff9\040\ufff9\052\ufff9" +
    "\001\002\000\004\053\221\001\002\000\024\013\uffc1\015" +
    "\uffc1\017\uffc1\020\uffc1\030\uffc1\035\uffc1\036\uffc1\037\uffc1" +
    "\040\uffc1\001\002\000\004\053\223\001\002\000\024\013" +
    "\uffc3\015\uffc3\017\uffc3\020\uffc3\030\uffc3\035\uffc3\036\uffc3" +
    "\037\uffc3\040\uffc3\001\002\000\024\013\uffc8\015\uffc8\017" +
    "\uffc8\020\uffc8\030\uffc8\035\uffc8\036\uffc8\037\uffc8\040\uffc8" +
    "\001\002\000\004\055\123\001\002\000\006\011\227\055" +
    "\145\001\002\000\004\016\230\001\002\000\004\005\231" +
    "\001\002\000\004\013\232\001\002\000\006\003\uffc9\011" +
    "\uffc9\001\002\000\006\007\217\010\215\001\002\000\024" +
    "\013\uffbf\015\uffbf\017\uffbf\020\uffbf\030\uffbf\035\uffbf\036" +
    "\uffbf\037\uffbf\040\uffbf\001\002\000\010\003\uff80\011\uff80" +
    "\055\uff80\001\002\000\004\013\241\001\002\000\022\013" +
    "\240\015\110\017\107\022\111\027\112\034\106\036\113" +
    "\046\105\001\002\000\010\003\uff82\011\uff82\055\uff82\001" +
    "\002\000\010\003\uff81\011\uff81\055\uff81\001\002\000\004" +
    "\013\247\001\002\000\004\011\uffbb\001\002\000\004\044" +
    "\245\001\002\000\004\013\246\001\002\000\006\003\uffdb" +
    "\011\uffdb\001\002\000\006\003\uff93\011\uff93\001\002\000" +
    "\004\014\304\001\002\000\004\014\302\001\002\000\024" +
    "\013\uff8c\015\uff8c\017\uff8c\021\uff8c\022\uff8c\024\uff8c\027" +
    "\uff8c\036\uff8c\052\uff8c\001\002\000\024\013\300\015\254" +
    "\017\251\021\262\022\255\024\261\027\257\036\260\052" +
    "\250\001\002\000\004\014\276\001\002\000\004\014\274" +
    "\001\002\000\004\013\273\001\002\000\004\014\271\001" +
    "\002\000\004\014\267\001\002\000\004\014\265\001\002" +
    "\000\004\014\263\001\002\000\004\053\264\001\002\000" +
    "\024\013\uff8a\015\uff8a\017\uff8a\021\uff8a\022\uff8a\024\uff8a" +
    "\027\uff8a\036\uff8a\052\uff8a\001\002\000\004\053\266\001" +
    "\002\000\024\013\uff89\015\uff89\017\uff89\021\uff89\022\uff89" +
    "\024\uff89\027\uff89\036\uff89\052\uff89\001\002\000\004\053" +
    "\270\001\002\000\024\013\uff8b\015\uff8b\017\uff8b\021\uff8b" +
    "\022\uff8b\024\uff8b\027\uff8b\036\uff8b\052\uff8b\001\002\000" +
    "\004\054\272\001\002\000\024\013\uff85\015\uff85\017\uff85" +
    "\021\uff85\022\uff85\024\uff85\027\uff85\036\uff85\052\uff85\001" +
    "\002\000\006\003\uff94\011\uff94\001\002\000\004\054\275" +
    "\001\002\000\024\013\uff86\015\uff86\017\uff86\021\uff86\022" +
    "\uff86\024\uff86\027\uff86\036\uff86\052\uff86\001\002\000\004" +
    "\054\277\001\002\000\024\013\uff88\015\uff88\017\uff88\021" +
    "\uff88\022\uff88\024\uff88\027\uff88\036\uff88\052\uff88\001\002" +
    "\000\006\003\uff95\011\uff95\001\002\000\024\013\uff8d\015" +
    "\uff8d\017\uff8d\021\uff8d\022\uff8d\024\uff8d\027\uff8d\036\uff8d" +
    "\052\uff8d\001\002\000\004\054\303\001\002\000\024\013" +
    "\uff87\015\uff87\017\uff87\021\uff87\022\uff87\024\uff87\027\uff87" +
    "\036\uff87\052\uff87\001\002\000\006\007\217\010\215\001" +
    "\002\000\024\013\uff84\015\uff84\017\uff84\021\uff84\022\uff84" +
    "\024\uff84\027\uff84\036\uff84\052\uff84\001\002\000\004\014" +
    "\364\001\002\000\040\013\362\015\317\017\316\020\324" +
    "\021\326\022\320\027\321\030\312\032\315\033\325\034" +
    "\310\035\311\036\323\037\313\040\306\001\002\000\004" +
    "\014\360\001\002\000\004\014\356\001\002\000\004\014" +
    "\354\001\002\000\004\014\352\001\002\000\040\013\uffb3" +
    "\015\uffb3\017\uffb3\020\uffb3\021\uffb3\022\uffb3\027\uffb3\030" +
    "\uffb3\032\uffb3\033\uffb3\034\uffb3\035\uffb3\036\uffb3\037\uffb3" +
    "\040\uffb3\001\002\000\004\014\350\001\002\000\004\014" +
    "\346\001\002\000\004\014\344\001\002\000\004\014\342" +
    "\001\002\000\004\014\340\001\002\000\004\013\337\001" +
    "\002\000\004\014\335\001\002\000\004\014\333\001\002" +
    "\000\004\014\331\001\002\000\004\014\327\001\002\000" +
    "\004\053\330\001\002\000\040\013\uffb1\015\uffb1\017\uffb1" +
    "\020\uffb1\021\uffb1\022\uffb1\027\uffb1\030\uffb1\032\uffb1\033" +
    "\uffb1\034\uffb1\035\uffb1\036\uffb1\037\uffb1\040\uffb1\001\002" +
    "\000\004\054\332\001\002\000\040\013\uffa7\015\uffa7\017" +
    "\uffa7\020\uffa7\021\uffa7\022\uffa7\027\uffa7\030\uffa7\032\uffa7" +
    "\033\uffa7\034\uffa7\035\uffa7\036\uffa7\037\uffa7\040\uffa7\001" +
    "\002\000\004\054\334\001\002\000\040\013\uffab\015\uffab" +
    "\017\uffab\020\uffab\021\uffab\022\uffab\027\uffab\030\uffab\032" +
    "\uffab\033\uffab\034\uffab\035\uffab\036\uffab\037\uffab\040\uffab" +
    "\001\002\000\004\053\336\001\002\000\040\013\uffb2\015" +
    "\uffb2\017\uffb2\020\uffb2\021\uffb2\022\uffb2\027\uffb2\030\uffb2" +
    "\032\uffb2\033\uffb2\034\uffb2\035\uffb2\036\uffb2\037\uffb2\040" +
    "\uffb2\001\002\000\004\011\uffbc\001\002\000\004\054\341" +
    "\001\002\000\040\013\uffad\015\uffad\017\uffad\020\uffad\021" +
    "\uffad\022\uffad\027\uffad\030\uffad\032\uffad\033\uffad\034\uffad" +
    "\035\uffad\036\uffad\037\uffad\040\uffad\001\002\000\004\054" +
    "\343\001\002\000\040\013\uffae\015\uffae\017\uffae\020\uffae" +
    "\021\uffae\022\uffae\027\uffae\030\uffae\032\uffae\033\uffae\034" +
    "\uffae\035\uffae\036\uffae\037\uffae\040\uffae\001\002\000\004" +
    "\054\345\001\002\000\040\013\uffb0\015\uffb0\017\uffb0\020" +
    "\uffb0\021\uffb0\022\uffb0\027\uffb0\030\uffb0\032\uffb0\033\uffb0" +
    "\034\uffb0\035\uffb0\036\uffb0\037\uffb0\040\uffb0\001\002\000" +
    "\004\054\347\001\002\000\040\013\uffaf\015\uffaf\017\uffaf" +
    "\020\uffaf\021\uffaf\022\uffaf\027\uffaf\030\uffaf\032\uffaf\033" +
    "\uffaf\034\uffaf\035\uffaf\036\uffaf\037\uffaf\040\uffaf\001\002" +
    "\000\004\054\351\001\002\000\040\013\uffa6\015\uffa6\017" +
    "\uffa6\020\uffa6\021\uffa6\022\uffa6\027\uffa6\030\uffa6\032\uffa6" +
    "\033\uffa6\034\uffa6\035\uffa6\036\uffa6\037\uffa6\040\uffa6\001" +
    "\002\000\006\007\217\010\215\001\002\000\040\013\uffa9" +
    "\015\uffa9\017\uffa9\020\uffa9\021\uffa9\022\uffa9\027\uffa9\030" +
    "\uffa9\032\uffa9\033\uffa9\034\uffa9\035\uffa9\036\uffa9\037\uffa9" +
    "\040\uffa9\001\002\000\004\053\355\001\002\000\040\013" +
    "\uffaa\015\uffaa\017\uffaa\020\uffaa\021\uffaa\022\uffaa\027\uffaa" +
    "\030\uffaa\032\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\037" +
    "\uffaa\040\uffaa\001\002\000\004\053\357\001\002\000\040" +
    "\013\uffac\015\uffac\017\uffac\020\uffac\021\uffac\022\uffac\027" +
    "\uffac\030\uffac\032\uffac\033\uffac\034\uffac\035\uffac\036\uffac" +
    "\037\uffac\040\uffac\001\002\000\004\006\361\001\002\000" +
    "\040\013\uffa5\015\uffa5\017\uffa5\020\uffa5\021\uffa5\022\uffa5" +
    "\027\uffa5\030\uffa5\032\uffa5\033\uffa5\034\uffa5\035\uffa5\036" +
    "\uffa5\037\uffa5\040\uffa5\001\002\000\004\011\uffbd\001\002" +
    "\000\040\013\uffb4\015\uffb4\017\uffb4\020\uffb4\021\uffb4\022" +
    "\uffb4\027\uffb4\030\uffb4\032\uffb4\033\uffb4\034\uffb4\035\uffb4" +
    "\036\uffb4\037\uffb4\040\uffb4\001\002\000\006\007\217\010" +
    "\215\001\002\000\040\013\uffa8\015\uffa8\017\uffa8\020\uffa8" +
    "\021\uffa8\022\uffa8\027\uffa8\030\uffa8\032\uffa8\033\uffa8\034" +
    "\uffa8\035\uffa8\036\uffa8\037\uffa8\040\uffa8\001\002\000\006" +
    "\003\uffde\011\uffde\001\002\000\006\003\370\016\103\001" +
    "\002\000\004\016\244\001\002\000\004\011\uffa3\001\002" +
    "\000\004\011\uffa1\001\002\000\006\003\uffb9\011\uffb9\001" +
    "\002\000\006\003\uffbe\011\uffbe\001\002\000\004\011\376" +
    "\001\002\000\012\003\u0101\016\u0103\042\u0100\045\u0102\001" +
    "\002\000\004\011\uffa2\001\002\000\004\013\u0133\001\002" +
    "\000\004\016\u0130\001\002\000\006\013\u010b\034\u010d\001" +
    "\002\000\006\003\u0105\050\u0104\001\002\000\006\003\u0108" +
    "\013\u0109\001\002\000\004\050\u0106\001\002\000\004\013" +
    "\u0107\001\002\000\006\003\uffb7\011\uffb7\001\002\000\004" +
    "\013\u010a\001\002\000\006\003\uffb8\011\uffb8\001\002\000" +
    "\006\003\uffb5\011\uffb5\001\002\000\004\011\u0112\001\002" +
    "\000\004\011\uffa0\001\002\000\004\014\u010e\001\002\000" +
    "\004\006\u010f\001\002\000\004\013\u0110\001\002\000\004" +
    "\011\u0112\001\002\000\004\011\u0126\001\002\000\004\023" +
    "\u0114\001\002\000\004\011\uff9c\001\002\000\006\013\u0115" +
    "\046\u0117\001\002\000\004\055\123\001\002\000\004\011" +
    "\uff9b\001\002\000\004\014\u0118\001\002\000\004\053\u0119" +
    "\001\002\000\004\013\u011a\001\002\000\004\055\123\001" +
    "\002\000\006\011\uff9a\055\145\001\002\000\004\011\u011d" +
    "\001\002\000\004\016\u011e\001\002\000\004\023\u011f\001" +
    "\002\000\004\013\u0120\001\002\000\004\011\uff99\001\002" +
    "\000\006\011\u0122\055\145\001\002\000\004\016\u0123\001" +
    "\002\000\004\023\u0124\001\002\000\004\013\u0125\001\002" +
    "\000\004\011\uff98\001\002\000\006\016\u0128\023\u0114\001" +
    "\002\000\004\011\uff9d\001\002\000\004\045\u0129\001\002" +
    "\000\004\013\u012a\001\002\000\004\011\uff9f\001\002\000" +
    "\004\011\u012c\001\002\000\006\016\u012d\023\u0114\001\002" +
    "\000\004\045\u012e\001\002\000\004\013\u012f\001\002\000" +
    "\004\011\uff9e\001\002\000\004\050\u0131\001\002\000\004" +
    "\013\u0132\001\002\000\006\003\uffb6\011\uffb6\001\002\000" +
    "\004\055\123\001\002\000\006\011\u0135\055\145\001\002" +
    "\000\004\016\u0136\001\002\000\004\042\u0137\001\002\000" +
    "\004\013\u0138\001\002\000\004\011\uff97\001\002\000\004" +
    "\011\uffa4\001\002\000\006\003\uffba\011\uffba\001\002\000" +
    "\004\011\u014a\001\002\000\006\003\uff96\011\uff96\001\002" +
    "\000\006\003\u013e\016\u013f\001\002\000\004\016\u0147\001" +
    "\002\000\006\003\u0141\004\u0140\001\002\000\006\003\u0144" +
    "\013\u0145\001\002\000\004\004\u0142\001\002\000\004\013" +
    "\u0143\001\002\000\006\003\uff8f\011\uff8f\001\002\000\004" +
    "\013\u0146\001\002\000\006\003\uff8e\011\uff8e\001\002\000" +
    "\006\003\uff90\011\uff90\001\002\000\004\004\u0148\001\002" +
    "\000\004\013\u0149\001\002\000\006\003\uff91\011\uff91\001" +
    "\002\000\004\016\u014b\001\002\000\004\004\u014c\001\002" +
    "\000\004\013\u014d\001\002\000\006\003\uff92\011\uff92\001" +
    "\002\000\006\004\242\013\243\001\002\000\004\011\u0154" +
    "\001\002\000\006\011\u0154\055\145\001\002\000\004\011" +
    "\u0154\001\002\000\006\003\uff83\011\uff83\001\002\000\006" +
    "\003\uff7d\011\uff7d\001\002\000\006\003\u0155\016\u0156\001" +
    "\002\000\004\016\u015e\001\002\000\006\003\u0158\025\u0157" +
    "\001\002\000\006\003\u015b\013\u015c\001\002\000\004\025" +
    "\u0159\001\002\000\004\013\u015a\001\002\000\006\003\uff79" +
    "\011\uff79\001\002\000\004\013\u015d\001\002\000\006\003" +
    "\uff7c\011\uff7c\001\002\000\006\003\uff7a\011\uff7a\001\002" +
    "\000\004\025\u015f\001\002\000\004\013\u0160\001\002\000" +
    "\006\003\uff7b\011\uff7b\001\002\000\006\003\uff7e\011\uff7e" +
    "\001\002\000\006\003\uff7f\011\uff7f\001\002\000\022\003" +
    "\u016b\012\u0166\015\u0168\017\u0167\022\u0169\026\u016c\027\u016a" +
    "\030\u0164\001\002\000\004\014\u017d\001\002\000\022\012" +
    "\uffd8\013\uffd8\015\uffd8\017\uffd8\022\uffd8\026\uffd8\027\uffd8" +
    "\030\uffd8\001\002\000\004\014\u017b\001\002\000\004\014" +
    "\u0179\001\002\000\004\014\u0177\001\002\000\004\014\u0175" +
    "\001\002\000\004\014\u0173\001\002\000\004\013\u0172\001" +
    "\002\000\004\014\u0170\001\002\000\022\012\u0166\013\u016e" +
    "\015\u0168\017\u0167\022\u0169\026\u016c\027\u016a\030\u0164\001" +
    "\002\000\006\003\uffe1\011\uffe1\001\002\000\022\012\uffd9" +
    "\013\uffd9\015\uffd9\017\uffd9\022\uffd9\026\uffd9\027\uffd9\030" +
    "\uffd9\001\002\000\006\007\217\010\215\001\002\000\022" +
    "\012\uffd1\013\uffd1\015\uffd1\017\uffd1\022\uffd1\026\uffd1\027" +
    "\uffd1\030\uffd1\001\002\000\006\003\uffe0\011\uffe0\001\002" +
    "\000\004\054\u0174\001\002\000\022\012\uffd3\013\uffd3\015" +
    "\uffd3\017\uffd3\022\uffd3\026\uffd3\027\uffd3\030\uffd3\001\002" +
    "\000\004\054\u0176\001\002\000\022\012\uffd4\013\uffd4\015" +
    "\uffd4\017\uffd4\022\uffd4\026\uffd4\027\uffd4\030\uffd4\001\002" +
    "\000\004\054\u0178\001\002\000\022\012\uffd6\013\uffd6\015" +
    "\uffd6\017\uffd6\022\uffd6\026\uffd6\027\uffd6\030\uffd6\001\002" +
    "\000\004\054\u017a\001\002\000\022\012\uffd5\013\uffd5\015" +
    "\uffd5\017\uffd5\022\uffd5\026\uffd5\027\uffd5\030\uffd5\001\002" +
    "\000\004\053\u017c\001\002\000\022\012\uffd7\013\uffd7\015" +
    "\uffd7\017\uffd7\022\uffd7\026\uffd7\027\uffd7\030\uffd7\001\002" +
    "\000\004\053\u017e\001\002\000\022\012\uffd2\013\uffd2\015" +
    "\uffd2\017\uffd2\022\uffd2\026\uffd2\027\uffd2\030\uffd2\001\002" +
    "\000\010\002\uffed\003\uffed\011\uffed\001\002\000\004\013" +
    "\u018c\001\002\000\010\003\u0183\016\u0184\044\u0163\001\002" +
    "\000\006\003\uffe4\011\uffe4\001\002\000\004\016\u0189\001" +
    "\002\000\004\041\u0185\001\002\000\006\003\u0186\013\u0187" +
    "\001\002\000\004\013\u0188\001\002\000\010\002\ufff1\003" +
    "\ufff1\011\ufff1\001\002\000\010\002\ufff0\003\ufff0\011\ufff0" +
    "\001\002\000\004\041\u018a\001\002\000\004\013\u018b\001" +
    "\002\000\010\002\uffef\003\uffef\011\uffef\001\002\000\010" +
    "\002\uffee\003\uffee\011\uffee\001\002\000\010\002\uffec\003" +
    "\uffec\011\uffec\001\002\000\006\003\u0183\016\u0184\001\002" +
    "\000\006\003\ufff2\011\ufff2\001\002\000\004\013\u0191\001" +
    "\002\000\004\055\123\001\002\000\006\011\u0193\055\145" +
    "\001\002\000\004\043\u0194\001\002\000\004\013\u0195\001" +
    "\002\000\006\003\ufff7\011\ufff7\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0193\000\020\002\003\003\006\004\005\022\013\023" +
    "\012\051\011\052\010\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\005\047\006\052\054\045\055\051\001\001" +
    "\000\002\001\001\000\006\004\016\052\010\001\001\000" +
    "\012\003\014\004\005\023\015\052\010\001\001\000\002" +
    "\001\001\000\006\004\016\052\010\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\026\023\027\026\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\053\u018c\001" +
    "\001\000\010\006\u0181\053\u017e\055\051\001\001\000\002" +
    "\001\001\000\030\007\063\010\064\014\066\015\065\016" +
    "\055\021\053\050\060\056\067\060\061\062\057\064\054" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\017" +
    "\u0151\024\u014f\050\u014e\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\063\u013b\001\001\000\002\001\001\000" +
    "\016\011\373\012\374\013\370\043\376\047\371\061\372" +
    "\001\001\000\004\057\365\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\007\071\010\064" +
    "\015\065\016\055\021\053\050\060\057\073\060\061\062" +
    "\057\064\054\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\034\306\035\313\001\001\000\006" +
    "\036\252\037\251\001\001\000\002\001\001\000\006\040" +
    "\236\041\113\001\001\000\006\032\173\033\172\001\001" +
    "\000\002\001\001\000\006\040\114\041\113\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\041\116\070\115\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\020\124\024" +
    "\121\050\120\001\001\000\004\066\146\001\001\000\004" +
    "\066\145\001\001\000\002\001\001\000\004\066\127\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\223\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\215\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\225\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\233\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\041\116\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\037\300\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\304\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\035\362\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\352\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\364\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\013\u0138\043\376\047\371\061" +
    "\u0139\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\044\u010b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\042\u012a\045\u0112\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\042\u0110\045\u0112\001\001\000\004" +
    "\045\u0126\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\u0115\001\001\000\004\024\u0120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\u011a\001\001\000\004\067\u011b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\u0126\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\u0133\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\065\u0161\001\001\000\004\065\u0160\001\001\000" +
    "\004\065\u0152\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\030\u016c\031" +
    "\u0164\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\031\u016e\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\u0170\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\024\u0191\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoGxml$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoGxml$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoGxml$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    protected int error_sync_size () {
       return 1;   
    }

    public void syntax_error(Symbol s){
        System.out.println("Error sintactico lexema \"" + s.value+"\" en la Columna: "+(s.right+1) +", Linea: "+(s.left+1)+ " no esperado"+s.sym);
		NodoError Nerror = new NodoError("sintactico");
		Nerror.descripcion = "caracter no reconocido: "+ s.value;
		Nerror.linea = String.valueOf(s.left+1);
		Nerror.columna = String.valueOf(s.right+1);
		errores.add(Nerror);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error sintactico \"" + s.value+"\" en la Linea: "+(s.right+1) +", Columna: "+(s.left+1)+ "");
        /*Nodo_error nuevo = new Nodo_error();
        nuevo.dato = String.valueOf(s.value);
        nuevo.linea = (s.left+1);
        nuevo.columna=(s.right);
        Errores.add(nuevo);
        errores=true;*/
    }
    public NodoGxml regresar_raiz(){
        return RCCSS;
    }
 /*codig de usuario */
 String total = "";
 public NodoGxml RCCSS = new NodoGxml();
 private Boolean texto_ini = false;
 private Control control = new Control();
 private Boton botonaso = new Boton();
 private ListaDatos lista = new ListaDatos();
 public ArrayList<NodoError> errores = new ArrayList();
 //public ArrayList<Nodo> e = new ArrayList<Nodo>();


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$SintacticoGxml$actions {


    public String estado="";

  private final SintacticoGxml parser;

  /** Constructor */
  CUP$SintacticoGxml$actions(SintacticoGxml parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$SintacticoGxml$do_action_part00000000(
    int                        CUP$SintacticoGxml$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoGxml$parser,
    java.util.Stack            CUP$SintacticoGxml$stack,
    int                        CUP$SintacticoGxml$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoGxml$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoGxml$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Start EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoGxml$parser.done_parsing();
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Start ::= Ini 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoGxml e1 = (NodoGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RCCSS.Analizar_Nombres_Ventanas(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Start",39, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Ini ::= Cuerpo_Ini Cuerpo_GEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Ini",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Ini ::= Cuerpo_GEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Ini",0, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo_Ini ::= Cuerpo_Ini ES_IMP 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Ini",16, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo_Ini ::= ES_IMP 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Ini",16, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Cuerpo_GEN ::= Cuerpo_GEN ES_VEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_GEN",17, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Cuerpo_GEN ::= ES_VEN 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_GEN",17, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // BOL ::= RVER 
            {
              String RESULT =null;
		RESULT ="verdadero";
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOL",19, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // BOL ::= RFAL 
            {
              String RESULT =null;
		RESULT ="falso";
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOL",19, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ES_IMP ::= MAY RIMP MEN SUM_TEXT MAY RIMP MEN 
            {
              NodoGxml RESULT =null;
		
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_IMP",1, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SUM_TEXT ::= SUM_TEXT TEXT 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		if(texto_ini){texto_ini=false; RESULT=e1.toString()+e2.toString();}else{RESULT=e1.toString()+" "+e2.toString(); }
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("SUM_TEXT",18, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SUM_TEXT ::= TEXT 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1.toString(); texto_ini=true;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("SUM_TEXT",18, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ES_VEN ::= ES_VEN1 ES_VEN3 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN",2, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ES_VEN1 ::= MAY RVEN EST_VEN_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); RCCSS.Ventanas.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN1",40, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ES_VEN1 ::= error MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Ventana v = new Ventana(); /*v.Imprimir_NodoS(e1);*/ RCCSS.Ventanas.add(v); 
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN1",40, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ES_VEN2 ::= MAY DIA RVEN MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ES_VEN2 ::= MAY DIA RVEN error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ES_VEN2 ::= MAY error DIA RVEN MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ES_VEN2 ::= error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN2",41, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ES_VEN3 ::= Cuerpo_Vent ES_VEN2 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN3",42, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ES_VEN3 ::= error ES_VEN2 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_VEN3",42, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // EST_VEN_COM ::= EST_VEN_COM EST_VEN 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN_COM",20, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // EST_VEN_COM ::= EST_VEN 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN_COM",20, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // EST_VEN ::= RID IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // EST_VEN ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // EST_VEN ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // EST_VEN ::= RAIN IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Inicial"; nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // EST_VEN ::= RAFI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Final"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_VEN",21, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Cuerpo_Vent ::= Cuerpo_Vent ES_CON 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Vent",3, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Cuerpo_Vent ::= ES_CON 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_Vent",3, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ES_CON ::= ES_CON1 ES_CON2 
            {
              NodoGxml RESULT =null;
		
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON",4, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ES_CON1 ::= MAY RCON EST_CON_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Contenedor v = new Contenedor(); /*v.Imprimir_NodoS(e1);*/ v.Analizar_Attributos(e1,errores); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON1",43, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ES_CON1 ::= MAY RCON error MEN 
            {
              Object RESULT =null;
		Contenedor v = new Contenedor(); Ventana actual=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); actual.contenedores.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON1",43, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ES_CON2 ::= Cuerpo_CONTE ES_CON3 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON2",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ES_CON2 ::= error ES_CON3 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON2",44, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ES_CON3 ::= MAY DIA RCON MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ES_CON3 ::= MAY DIA RCON error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ES_CON3 ::= MAY error DIA RCON MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ES_CON3 ::= error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CON3",45, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // EST_CON_COM ::= EST_CON_COM EST_CON 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON_COM",22, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // EST_CON_COM ::= EST_CON 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON_COM",22, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // EST_CON ::= RID IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="ID"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // EST_CON ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // EST_CON ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // EST_CON ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // EST_CON ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // EST_CON ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // EST_CON ::= RBOR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Borde"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CON",23, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Cuerpo_CONTE ::= Cuerpo_CONTE Tipo_Conte 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CONTE",10, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Cuerpo_CONTE ::= Tipo_Conte 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CONTE",10, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Tipo_Conte ::= ES_TEX 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Textos.add(e1); 
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Tipo_Conte ::= ES_CTR 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Tipo_Conte ::= ES_MUL 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Tipo_Conte ::= ES_BOT 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Tipo_Conte ::= ES_ENV 
            {
              NodoGxml RESULT =null;
			
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipo_Conte",5, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ES_TEX ::= MAY RTEX EST_TEX_COM MEN SUM_TEXT MAY DIA RTEX MEN 
            {
              Texto RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		Texto v = new Texto(); EDato nuevo= new EDato(e2,e2left+1,e2right+1); 	v.Analizar_Attributos(e1,errores,nuevo); RESULT=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_TEX",38, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-8)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // EST_TEX_COM ::= EST_TEX_COM EST_TEX 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX_COM",24, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // EST_TEX_COM ::= EST_TEX 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX_COM",24, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // EST_TEX ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // EST_TEX ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // EST_TEX ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // EST_TEX ::= RFUE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // EST_TEX ::= RTAM IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam";			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // EST_TEX ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // EST_TEX ::= RNEG IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // EST_TEX ::= RCUR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_TEX",25, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ES_CTR ::= ES_CTR1 Cuerpo_CTR_1 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR",6, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ES_CTR1 ::= MAY RCTR EST_CTR_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Control v = new Control(); control=v; v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR1",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ES_CTR1 ::= MAY RCTR error MEN 
            {
              Object RESULT =null;
		Control v = new Control(); control=v;  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR1",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ES_CTR1 ::= MAY error MEN 
            {
              Object RESULT =null;
		Control v = new Control(); control=v;  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.controles.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR1",46, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Cuerpo_CTR_1 ::= Cuerpo_CTR ES_CTR2 
            {
              NodoGxml RESULT =null;
		control.Analizar_Lista_Datos(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR_1",7, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Cuerpo_CTR_1 ::= ES_CTR2 
            {
              NodoGxml RESULT =null;
		control.Analizar_Lista_Datos(errores);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR_1",7, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ES_CTR2 ::= MAY DIA RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ES_CTR2 ::= MAY DIA error RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ES_CTR2 ::= MAY error DIA RCTR MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ES_CTR2 ::= MAY DIA RCTR error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_CTR2",47, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // EST_CTR_COM ::= EST_CTR_COM EST_CTR 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR_COM",26, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // EST_CTR_COM ::= EST_CTR 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR_COM",26, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // EST_CTR ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // EST_CTR ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // EST_CTR ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X";	 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // EST_CTR ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // EST_CTR ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // EST_CTR ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // EST_CTR ::= RFUE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="fuente"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EST_CTR ::= RTAM IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="tam"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EST_CTR ::= RCOL IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="color"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // EST_CTR ::= RNEG IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="negrita";		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // EST_CTR ::= RCUR IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="cursiva"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // EST_CTR ::= RMAX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="maximo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // EST_CTR ::= RMIN IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="minimo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // EST_CTR ::= RACI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_CTR",27, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Cuerpo_CTR ::= Cuerpo_CTR Tipos_CTR 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR",8, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Cuerpo_CTR ::= Tipos_CTR 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_CTR",8, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Tipos_CTR ::= ES_LDA 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		control.Datos=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipos_CTR",9, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Tipos_CTR ::= ES_DEF 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		control.Defecto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Tipos_CTR",9, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ES_LDA ::= MAY RLDA EST_LDA_COM 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_LDA",33, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // EST_LDA_COM ::= RACI IGU MORE MEN Cuerpo_LDA MAY DIA RLDA MEN 
            {
              ListaDatos RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-6)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		e1.accion=e2.toString(); RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-8)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // EST_LDA_COM ::= MEN Cuerpo_LDA MAY DIA RLDA MEN 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).right;
		ListaDatos e1 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_LDA_COM",34, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Cuerpo_LDA ::= Cuerpo_LDA ES_DA 
            {
              ListaDatos RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		ListaDatos e2 = (ListaDatos)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.Datos.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_LDA",32, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Cuerpo_LDA ::= ES_DA 
            {
              ListaDatos RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		ListaDatos nuevo = new ListaDatos(); nuevo.Datos.add(e1); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_LDA",32, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ES_DA ::= MAY RDAT EST_DA_COM 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		EDato e1 = (EDato)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		RESULT=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DA",35, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // NT$0 ::= 
            {
              EDato RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("NT$0",53, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // EST_DA_COM ::= REFE IGU CAD MEN SUM_TEXT NT$0 MAY DIA RDAT MEN 
            {
              EDato RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (EDato) ((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-7)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-7)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-7)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e2left+1; nuevo.columna=e2right+1; nuevo.referencia=e2.toString(); RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_DA_COM",36, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-9)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // EST_DA_COM ::= MEN SUM_TEXT MAY DIA RDAT MEN 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1; nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_DA_COM",36, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ES_DEF ::= MAY RDEF MEN SUM_TEXT MAY DIA RDEF MEN 
            {
              EDato RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)).value;
		EDato nuevo= new EDato(); nuevo.Dato=e1.trim(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_DEF",37, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ES_MUL ::= ES_MUL1 ES_MUL2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL",11, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ES_MUL1 ::= MAY RMUL EST_MUL_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Multimedia v = new Multimedia(); v.Analizar_Attributos(e1,errores); Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // ES_MUL1 ::= MAY RMUL error MEN 
            {
              Object RESULT =null;
		Multimedia v = new Multimedia();  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ES_MUL1 ::= MAY error RMUL MEN 
            {
              Object RESULT =null;
		Multimedia v = new Multimedia();  Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Multi.add(v);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL1",48, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ES_MUL2 ::= error MAY DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // ES_MUL2 ::= MAY error DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // ES_MUL2 ::= MAY DIA RMUL error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // ES_MUL2 ::= MAY DIA error RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // ES_MUL2 ::= MAY DIA RMUL MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_MUL2",49, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // EST_MUL_COM ::= EST_MUL_COM EST_MUL 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL_COM",28, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // EST_MUL_COM ::= EST_MUL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL_COM",28, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // EST_MUL ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // EST_MUL ::= RTIP IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Tipo"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // EST_MUL ::= RPAT IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Path"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // EST_MUL ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // EST_MUL ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // EST_MUL ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // EST_MUL ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // EST_MUL ::= RAUT IGU BOL 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="auto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_MUL",29, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ES_BOT ::= ES_BOT1 Cuerpo_BOT 
            {
              NodoGxml RESULT =null;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT",12, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // ES_BOT1 ::= MAY RBOT EST_BOT_COM MEN 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		Boton v = new Boton("boton"); v.Analizar_Attributos(e1,errores); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",50, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // ES_BOT1 ::= MAY RBOT error MEN 
            {
              Object RESULT =null;
		Boton v = new Boton("boton"); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",50, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // ES_BOT1 ::= MAY RBOT MEN 
            {
              Object RESULT =null;
		Boton v = new Boton("boton"); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT1",50, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Cuerpo_BOT ::= ES_TEX ES_BOT2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.Etexto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Cuerpo_BOT ::= SUM_TEXT ES_BOT2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.texto=e1.replace("\"", "");
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Cuerpo_BOT ::= error ES_BOT2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_BOT",13, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // ES_BOT2 ::= MAY DIA RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // ES_BOT2 ::= MAY error DIA RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // ES_BOT2 ::= MAY DIA RBOT error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // ES_BOT2 ::= MAY DIA error RBOT MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_BOT2",51, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // EST_BOT_COM ::= EST_BOT_COM EST_BOT 
            {
              NodoSGxml RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		NodoSGxml e2 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		e2.listas.add(e1); RESULT=e2;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT_COM",30, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // EST_BOT_COM ::= EST_BOT 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		NodoSGxml nuevo = new NodoSGxml("raiz"); nuevo.listas.add(e1);RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT_COM",30, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // EST_BOT ::= RNOM IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Nombre"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // EST_BOT ::= RX IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="X"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // EST_BOT ::= RY IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Y"; 			nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // EST_BOT ::= RALT IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Alto"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // EST_BOT ::= RANC IGU NUM 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="Ancho"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // EST_BOT ::= REFE IGU CAD 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="referencia"; 	nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // EST_BOT ::= RACI IGU MORE 
            {
              NodoSGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
		 NodoSGxml nuevo = new NodoSGxml(); nuevo.tipo="accion"; 		nuevo.val =e1.toString(); nuevo.linea=e1left+1; nuevo.columna=e1right+1; RESULT=nuevo;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("EST_BOT",31, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // NT$1 ::= 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.peek()).value;
Boton v = new Boton("enviar"); v.Analizar_Attributos(e1,errores); botonaso=v;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("NT$1",54, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ES_ENV ::= MAY RENV EST_BOT_COM NT$1 MEN Cuerpo_ENV 
            {
              NodoGxml RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (NodoGxml) ((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).right;
		NodoSGxml e1 = (NodoSGxml)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)).value;
		Ventana actualv=RCCSS.Ventanas.get(RCCSS.Ventanas.size()-1); Contenedor actual =actualv.contenedores.get(actualv.contenedores.size()-1); actual.Botones.add(botonaso);
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV",15, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Cuerpo_ENV ::= ES_TEX ES_ENV2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		Texto e1 = (Texto)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.Etexto=e1;
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Cuerpo_ENV ::= SUM_TEXT ES_ENV2 
            {
              NodoGxml RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)).value;
		botonaso.texto=e1.replace("\"", "");
              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Cuerpo_ENV ::= error ES_ENV2 
            {
              NodoGxml RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("Cuerpo_ENV",14, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ES_ENV2 ::= MAY DIA RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ES_ENV2 ::= MAY error DIA RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ES_ENV2 ::= MAY DIA RENV error MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ES_ENV2 ::= MAY DIA error RENV MEN 
            {
              Object RESULT =null;

              CUP$SintacticoGxml$result = parser.getSymbolFactory().newSymbol("ES_ENV2",52, ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.elementAt(CUP$SintacticoGxml$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$SintacticoGxml$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$SintacticoGxml$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$SintacticoGxml$do_action(
    int                        CUP$SintacticoGxml$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoGxml$parser,
    java.util.Stack            CUP$SintacticoGxml$stack,
    int                        CUP$SintacticoGxml$top)
    throws java.lang.Exception
    {
              return CUP$SintacticoGxml$do_action_part00000000(
                               CUP$SintacticoGxml$act_num,
                               CUP$SintacticoGxml$parser,
                               CUP$SintacticoGxml$stack,
                               CUP$SintacticoGxml$top);
    }
}

}
